<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glGetRenderbufferParameteriv</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glGetRenderbufferParameteriv"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetRenderbufferParameteriv — return parameters of a renderbuffer object</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGetRenderbufferParameteriv</strong>(</code></td><td>GLenum <var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLint * <var class="pdparam">params</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the target renderbuffer object.
                    The symbolic constant must be <code class="constant">GL_RENDERBUFFER</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies the symbolic name of a renderbuffer object parameter.
                    Accepted values are <code class="constant">GL_RENDERBUFFER_WIDTH</code>,
                    <code class="constant">GL_RENDERBUFFER_HEIGHT</code>,
                    <code class="constant">GL_RENDERBUFFER_INTERNAL_FORMAT</code>,
                    <code class="constant">GL_RENDERBUFFER_RED_SIZE</code>,
                    <code class="constant">GL_RENDERBUFFER_GREEN_SIZE</code>,
                    <code class="constant">GL_RENDERBUFFER_BLUE_SIZE</code>,
                    <code class="constant">GL_RENDERBUFFER_ALPHA_SIZE</code>,
                    <code class="constant">GL_RENDERBUFFER_DEPTH_SIZE</code>, or
                    <code class="constant">GL_RENDERBUFFER_STENCIL_SIZE</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>
                    Returns the requested parameter.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glGetRenderbufferParameteriv</code> returns in 
            <em class="parameter"><code>params</code></em> a selected parameter of the 
            currently bound renderbuffer object.
        </p><p>
            <em class="parameter"><code>pname</code></em> names a specific renderbuffer object parameter, as follows:
        </p><div class="variablelist"><dl class="variablelist"><dt><span class="term"><code class="constant">GL_RENDERBUFFER_WIDTH</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the width in pixels
                        of the image of the currently bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_HEIGHT</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the height in pixels
                        of the image of the currently bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_INTERNAL_FORMAT</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the internal format
                        of the image of the currently bound renderbuffer.
                        The initial value is <code class="constant">GL_RGBA4</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_RED_SIZE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the resolution in bits 
                        for the red component of the image of the currently 
                        bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_GREEN_SIZE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the resolution in bits 
                        for the green component of the image of the currently 
                        bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_BLUE_SIZE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the resolution in bits 
                        for the blue component of the image of the currently 
                        bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_ALPHA_SIZE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the resolution in bits 
                        for the alpha component of the image of the currently 
                        bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_DEPTH_SIZE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the resolution in bits 
                        for the depth component of the image of the currently 
                        bound renderbuffer.
                        The initial value is 0.
                    </p></dd><dt><span class="term"><code class="constant">GL_RENDERBUFFER_STENCIL_SIZE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the resolution in bits 
                        for the stencil component of the image of the currently 
                        bound renderbuffer.
                        The initial value is 0.
                    </p></dd></dl></div></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            The resolution of components reported by 
            <code class="function">glGetRenderbufferParameteriv</code> are the actual
            resolutions at which the components are stored, which may be
            different than those requested by the <em class="parameter"><code>internalformat</code></em>
            parameter of <a class="citerefentry" href="glRenderbufferStorage.xml"><span class="citerefentry"><span class="refentrytitle">glRenderbufferStorage</span></span></a>.
        </p><p>
            If an error is generated,
            no change is made to the contents of <em class="parameter"><code>params</code></em>.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not <code class="constant">GL_RENDERBUFFER</code>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>pname</code></em> is not 
            <code class="constant">GL_RENDERBUFFER_WIDTH</code>,
            <code class="constant">GL_RENDERBUFFER_HEIGHT</code>,
            <code class="constant">GL_RENDERBUFFER_INTERNAL_FORMAT</code>,
            <code class="constant">GL_RENDERBUFFER_RED_SIZE</code>,
            <code class="constant">GL_RENDERBUFFER_GREEN_SIZE</code>,
            <code class="constant">GL_RENDERBUFFER_BLUE_SIZE</code>,
            <code class="constant">GL_RENDERBUFFER_ALPHA_SIZE</code>,
            <code class="constant">GL_RENDERBUFFER_DEPTH_SIZE</code>, or
            <code class="constant">GL_RENDERBUFFER_STENCIL_SIZE</code>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if the reserved renderbuffer object name 0 is bound.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBindRenderBuffer.xml"><span class="citerefentry"><span class="refentrytitle">glBindRenderBuffer</span></span></a>,
            <a class="citerefentry" href="glRenderbufferStorage.xml"><span class="citerefentry"><span class="refentrytitle">glRenderbufferStorage</span></span></a>
        </p></div><div class="refsect1"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2008 Khronos Group. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
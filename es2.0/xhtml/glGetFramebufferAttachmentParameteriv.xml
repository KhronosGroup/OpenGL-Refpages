<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glGetFramebufferAttachmentParameteriv</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glGetFramebufferAttachmentParameteriv"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetFramebufferAttachmentParameteriv — return attachment parameters of a framebuffer object</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGetFramebufferAttachmentParameteriv</strong>(</code></td><td>GLenum <var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">attachment</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLint * <var class="pdparam">params</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Specifies the target framebuffer object.
                    The symbolic constant must be <code class="constant">GL_FRAMEBUFFER</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>attachment</code></em></span></dt><dd><p>
                    Specifies the symbolic name of a framebuffer object attachment point.
                    Accepted values are <code class="constant">GL_COLOR_ATTACHMENT0</code>,
                    <code class="constant">GL_DEPTH_ATTACHMENT</code>, and 
                    <code class="constant">GL_STENCIL_ATTACHMENT</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies the symbolic name of a framebuffer object attachment parameter.
                    Accepted values are <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>,
                    <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code>,
                    <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</code>,
                    and <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>
                    Returns the requested parameter.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glGetFramebufferAttachmentParameteriv</code> 
            returns in <em class="parameter"><code>params</code></em> a selected attachment 
            parameter of the attachpoint point <em class="parameter"><code>attachment</code></em> 
            of the currently bound framebuffer object.
        </p><p>
            <em class="parameter"><code>pname</code></em> names a specific framebuffer object attachment parameter, as follows:
        </p><div class="variablelist"><dl class="variablelist"><dt><span class="term"><code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code></span></dt><dd><p>
                        <em class="parameter"><code>params</code></em> returns the type of 
                        object which contains the attached image, either 
                        <code class="constant">GL_RENDERBUFFER</code>, 
                        <code class="constant">GL_TEXTURE</code>, or if no image is 
                        attached, <code class="constant">GL_NONE</code>.
                        The initial value is <code class="constant">GL_NONE</code>.
                    </p></dd><dt><span class="term"><code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code></span></dt><dd><p>
                        If the value of <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>
                        is <code class="constant">GL_RENDERBUFFER</code>, 
                        <em class="parameter"><code>params</code></em> returns the name of 
                        the renderbuffer object which contains the attached image.
                        If the value of <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>
                        is <code class="constant">GL_TEXTURE</code>, 
                        <em class="parameter"><code>params</code></em> returns the name of 
                        the texture object which contains the attached image.
                        The initial value is zero.
                    </p></dd><dt><span class="term"><code class="constant">GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</code></span></dt><dd><p>
                        If the value of <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>
                        is <code class="constant">GL_TEXTURE</code>, 
                        <em class="parameter"><code>params</code></em> returns the mipmap level of 
                        the texture object which contains the attached image.
                        The initial value is zero.
                    </p></dd><dt><span class="term"><code class="constant">GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</code></span></dt><dd><p>
                        If the value of <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>
                        is <code class="constant">GL_TEXTURE</code> and 
                        <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code>
                        is the name of a cube-map texture, 
                        <em class="parameter"><code>params</code></em> returns the cube map 
                        face of the cube-map texture object which contains 
                        the attached image. If the attached image is from a 
                        texture object but not a cube-map, <em class="parameter"><code>params</code></em> 
                        returns 0.
                        The initial value is <code class="constant">GL_TEXTURE_CUBE_MAP_POSITIVE_X</code>.
                    </p></dd></dl></div></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            If an error is generated,
            no change is made to the contents of <em class="parameter"><code>params</code></em>.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not <code class="constant">GL_FRAMEBUFFER</code>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>attachment</code></em> is not <code class="constant">GL_COLOR_ATTACHMENT0</code>, <code class="constant">GL_DEPTH_ATTACHMENT</code>, or <code class="constant">GL_STENCIL_ATTACHMENT</code>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if the attached object at the named attachment point is <code class="constant">GL_RENDERBUFFER</code> and <em class="parameter"><code>pname</code></em> is not
            <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code> or <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if the attached object at the named attachment point is <code class="constant">GL_TEXTURE</code> and <em class="parameter"><code>pname</code></em> is not
            <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>, <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code>,
            <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</code>, or <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</code>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if there is no attached object at the named attachment point and <em class="parameter"><code>pname</code></em> is not
            <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if the default framebuffer object name 0 is bound.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBindFramebuffer.xml"><span class="citerefentry"><span class="refentrytitle">glBindFramebuffer</span></span></a>,
            <a class="citerefentry" href="glFramebufferRenderbuffer.xml"><span class="citerefentry"><span class="refentrytitle">glFramebufferRenderbuffer</span></span></a>,
            <a class="citerefentry" href="glFramebufferTexture2D.xml"><span class="citerefentry"><span class="refentrytitle">glFramebufferTexture2D</span></span></a>
        </p></div><div class="refsect1"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2008 Khronos Group. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
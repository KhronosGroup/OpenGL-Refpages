<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glGetShaderSource</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glGetShaderSource"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetShaderSource — return the source code string from a shader object</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGetShaderSource</strong>(</code></td><td>GLuint <var class="pdparam">shader</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">bufSize</var>, </td></tr><tr><td> </td><td>GLsizei *<var class="pdparam">length</var>, </td></tr><tr><td> </td><td>GLchar *<var class="pdparam">source</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>shader</code></em></span></dt><dd><p>Specifies the shader object to be
		    queried.</p></dd><dt><span class="term"><em class="parameter"><code>bufSize</code></em></span></dt><dd><p>Specifies the size of the character buffer for
		    storing the returned source code string.</p></dd><dt><span class="term"><em class="parameter"><code>length</code></em></span></dt><dd><p>Returns the length of the string returned in
		    <em class="parameter"><code>source</code></em> (excluding the null
		    terminator).</p></dd><dt><span class="term"><em class="parameter"><code>source</code></em></span></dt><dd><p>Specifies an array of characters that is used
		    to return the source code string.</p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p><code class="function">glGetShaderSource</code> returns the
	concatenation of the source code strings from the shader object
	specified by <em class="parameter"><code>shader</code></em>. The source code
	strings for a shader object are the result of a previous call to
	<a class="citerefentry" href="glShaderSource.xml"><span class="citerefentry"><span class="refentrytitle">glShaderSource</span></span></a>.
	The string returned by the function will be null
	terminated.</p><p><code class="function">glGetShaderSource</code> returns in
	<em class="parameter"><code>source</code></em> as much of the source code string
	as it can, up to a maximum of <em class="parameter"><code>bufSize</code></em>
	characters. The number of characters actually returned,
	excluding the null termination character, is specified by
	<em class="parameter"><code>length</code></em>. If the length of the returned
	string is not required, a value of <code class="constant">NULL</code> can
	be passed in the <em class="parameter"><code>length</code></em> argument. The
	size of the buffer required to store the returned source code
	string can be obtained by calling
	<a class="citerefentry" href="glGetShaderiv.xml"><span class="citerefentry"><span class="refentrytitle">glGetShaderiv</span></span></a>
	with the value
	<code class="constant">GL_SHADER_SOURCE_LENGTH</code>.</p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_VALUE</code> is generated if
	<em class="parameter"><code>shader</code></em> is not a value generated by
	OpenGL.</p><p><code class="constant">GL_INVALID_OPERATION</code> is generated if
	<em class="parameter"><code>shader</code></em> is not a shader object.</p><p><code class="constant">GL_INVALID_VALUE</code> is generated if
	<em class="parameter"><code>bufSize</code></em> is less than 0.</p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p><a class="citerefentry" href="glGetShaderiv.xml"><span class="citerefentry"><span class="refentrytitle">glGetShaderiv</span></span></a>
	with argument
	<code class="constant">GL_SHADER_SOURCE_LENGTH</code></p><p><a class="citerefentry" href="glIsShader.xml"><span class="citerefentry"><span class="refentrytitle">glIsShader</span></span></a></p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p><a class="citerefentry" href="glCreateShader.xml"><span class="citerefentry"><span class="refentrytitle">glCreateShader</span></span></a>,
	<a class="citerefentry" href="glShaderSource.xml"><span class="citerefentry"><span class="refentrytitle">glShaderSource</span></span></a></p></div><div class="refsect1"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
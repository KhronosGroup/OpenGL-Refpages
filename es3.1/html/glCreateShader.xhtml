<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glCreateShader - OpenGL ES 3.1 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glCreateShader">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glCreateShader — Creates a shader object</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">GLuint <strong class="fsfunc">glCreateShader</strong>(</code>
              </td>
              <td>GLenum <var class="pdparam">shaderType</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>shaderType</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                        Specifies the type of shader to be created.
                        <code class="constant">GL_VERTEX_SHADER</code>,
                        <code class="constant">GL_FRAGMENT_SHADER</code>, or
                        <code class="constant">GL_COMPUTE_SHADER</code>,
                    </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p>
            <code class="function">glCreateShader</code> creates an empty shader
            object and returns a non-zero value by which it can be
            referenced. A shader object is used to maintain the source code
            strings that define a shader. <em class="parameter"><code>shaderType</code></em>
            indicates the type of shader to be created. Three types of
            shaders are supported. A shader of type
            <code class="constant">GL_VERTEX_SHADER</code> is a shader that is
            intended to run on the programmable vertex processor. A shader
            of type <code class="constant">GL_FRAGMENT_SHADER</code> is a shader that
            is intended to run on the programmable fragment processor. A
            shader of type <code class="constant">GL_COMPUTE_SHADER</code> is a
            shader that is intended to run on the programmable compute
            processor.
        </p>
        <p>
            When created, a shader object's
            <code class="constant">GL_SHADER_TYPE</code> parameter is set to
            <code class="constant">GL_COMPUTE_SHADER</code>,
            <code class="constant">GL_VERTEX_SHADER</code> or
            <code class="constant">GL_FRAGMENT_SHADER</code>, depending on the value
            of <em class="parameter"><code>shaderType</code></em>.
        </p>
      </div>
      <div class="refsect1" id="notes">
        <h2>Notes</h2>
        <p>
            Like buffer and texture objects, the name space for shader
            objects may be shared across a set of contexts, as long as the
            server sides of the contexts share the same address space. If
            the name space is shared across contexts, any attached objects
            and the data associated with those attached objects are shared
            as well.
        </p>
        <p>
            Applications are responsible for providing the synchronization
            across API calls when objects are accessed from different
            execution threads.
        </p>
        <p>
            <code class="constant">GL_COMPUTE_SHADER</code> is available only if the
            GL version is 3.1 or higher.
        </p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p>
            This function returns 0 if an error occurs creating the shader
            object.
        </p>
        <p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if
            <em class="parameter"><code>shaderType</code></em> is not an accepted
            value.
        </p>
      </div>
      <div class="refsect1" id="associatedgets">
        <h2>Associated Gets</h2>
        <p>
            <a class="citerefentry" href="glGetShaderiv.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetShaderiv</span></span></a>
            with a valid shader object and the parameter to be
            queried</p>
        <p>
            <a class="citerefentry" href="glGetShaderInfoLog.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetShaderInfoLog</span></span></a>
            with a valid shader object</p>
        <p>
            <a class="citerefentry" href="glGetShaderSource.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetShaderSource</span></span></a>
            with a valid shader object
        </p>
        <p>
            <a class="citerefentry" href="glIsShader.xhtml"><span class="citerefentry"><span class="refentrytitle">glIsShader</span></span></a>
        </p>
      </div>
      <div class="refsect1" id="versions">
        <h2>API Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="3">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">
                  <code class="function">glCreateShader</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
            <a class="citerefentry" href="glAttachShader.xhtml"><span class="citerefentry"><span class="refentrytitle">glAttachShader</span></span></a>,
            <a class="citerefentry" href="glCompileShader.xhtml"><span class="citerefentry"><span class="refentrytitle">glCompileShader</span></span></a>,
            <a class="citerefentry" href="glDeleteShader.xhtml"><span class="citerefentry"><span class="refentrytitle">glDeleteShader</span></span></a>,
            <a class="citerefentry" href="glDetachShader.xhtml"><span class="citerefentry"><span class="refentrytitle">glDetachShader</span></span></a>,
            <a class="citerefentry" href="glShaderSource.xhtml"><span class="citerefentry"><span class="refentrytitle">glShaderSource</span></span></a>
        </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2003-2005 3Dlabs Inc. Ltd.
            Copyright <span class="trademark"/>© 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glGetProgramiv - OpenGL ES 3.1 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glGetProgramiv">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glGetProgramiv — Returns a parameter from a program object</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glGetProgramiv</strong>(</code>
              </td>
              <td>GLuint <var class="pdparam">program</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">pname</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint *<var class="pdparam">params</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>program</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the program object to be
            queried.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>pname</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the object parameter. Accepted
            symbolic names are
            <code class="constant">GL_ACTIVE_ATOMIC_COUNTER_BUFFERS</code>,
            <code class="constant">GL_ACTIVE_ATTRIBUTES</code>,
            <code class="constant">GL_ACTIVE_ATTRIBUTE_MAX_LENGTH</code>,
            <code class="constant">GL_ACTIVE_UNIFORMS</code>,
            <code class="constant">GL_ACTIVE_UNIFORM_BLOCKS</code>,
            <code class="constant">GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH</code>,
            <code class="constant">GL_ACTIVE_UNIFORM_MAX_LENGTH</code>,
            <code class="constant">GL_ATTACHED_SHADERS</code>,
            <code class="constant">GL_COMPUTE_WORK_GROUP_SIZE</code>,
            <code class="constant">GL_DELETE_STATUS</code>,
            <code class="constant">GL_INFO_LOG_LENGTH</code>,
            <code class="constant">GL_LINK_STATUS</code>,
            <code class="constant">GL_PROGRAM_BINARY_LENGTH</code>,
            <code class="constant">GL_PROGRAM_BINARY_RETRIEVABLE_HINT</code>,
            <code class="constant">GL_PROGRAM_SEPARABLE</code>,
            <code class="constant">GL_TRANSFORM_FEEDBACK_BUFFER_MODE</code>,
            <code class="constant">GL_TRANSFORM_FEEDBACK_VARYINGS</code>,
            <code class="constant">GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH</code> and
            <code class="constant">GL_VALIDATE_STATUS</code>.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>params</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Returns the requested object parameter.</p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p><code class="function">glGetProgramiv</code>
    returns in <em class="parameter"><code>params</code></em>
    the value of a parameter for a specific program object. The following parameters are defined:</p>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_ATOMIC_COUNTER_BUFFERS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            number of active attribute atomic counter buffers used by
            <em class="parameter"><code>program</code></em>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_ATTRIBUTES</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            number of active attribute variables for
            <em class="parameter"><code>program</code></em>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_ATTRIBUTE_MAX_LENGTH</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            length of the longest active attribute name for
            <em class="parameter"><code>program</code></em>, including the null
            termination character (i.e., the size of the
            character buffer required to store the longest
            attribute name). If no active attributes exist, 0 is
            returned.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_UNIFORM_BLOCKS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            number of uniform blocks for <em class="parameter"><code>program</code></em>
                        containing active uniforms.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            length of the longest active uniform block name
            for <em class="parameter"><code>program</code></em>, including the
            null termination character (i.e., the size of the
            character buffer required to store the longest
            uniform block name). If no active uniform
            blocks exist, 0 is returned.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_UNIFORMS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            number of active uniform variables for
            <em class="parameter"><code>program</code></em>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ACTIVE_UNIFORM_MAX_LENGTH</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            length of the longest active uniform variable name
            for <em class="parameter"><code>program</code></em>, including the
            null termination character (i.e., the size of the
            character buffer required to store the longest
            uniform variable name). If no active uniform
            variables exist, 0 is returned.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_ATTACHED_SHADERS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            number of shader objects attached to
            <em class="parameter"><code>program</code></em>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_COMPUTE_WORK_GROUP_SIZE</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns an
            array of three integers containing the local work group size of
            the compute program as specified by its input layout qualifier(s).
            <em class="parameter"><code>program</code></em> must be the name of a program object
            that has been previously linked successfully and contains a binary
            for the compute shader stage.
            </p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_DELETE_STATUS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns
            <code class="constant">GL_TRUE</code> if
            <em class="parameter"><code>program</code></em> is currently flagged
            for deletion, and <code class="constant">GL_FALSE</code>
            otherwise.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_INFO_LOG_LENGTH</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            number of characters in the information log for
            <em class="parameter"><code>program</code></em> including the null
            termination character (i.e., the size of the
            character buffer required to store the information
            log). If <em class="parameter"><code>program</code></em> has no
            information log, a value of 0 is
            returned.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_LINK_STATUS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns
            <code class="constant">GL_TRUE</code> if the last link
            operation on <em class="parameter"><code>program</code></em> was
            successful, and <code class="constant">GL_FALSE</code>
            otherwise.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_PROGRAM_BINARY_LENGTH</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            length of the program binary that would be returned by
            <a class="citerefentry" href="glGetProgramBinary.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetProgramBinary</span></span></a>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_PROGRAM_BINARY_RETRIEVABLE_HINT</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the
            current value of whether the binary retrieval
            hint is enabled for <em class="parameter"><code>program</code></em>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_PROGRAM_SEPARABLE</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns
            <code class="constant">GL_TRUE</code> if the program has been flagged
            for use as a separable program object that can be bound to
            individual shader stages with
            <a class="citerefentry" href="glUseProgramStages.xhtml"><span class="citerefentry"><span class="refentrytitle">glUseProgramStages</span></span></a>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_TRANSFORM_FEEDBACK_BUFFER_MODE</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns a symbolic constant
            indicating the buffer mode used when transform feedback is active.
            This may be <code class="constant">GL_SEPARATE_ATTRIBS</code> or
            <code class="constant">GL_INTERLEAVED_ATTRIBS</code>.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_TRANSFORM_FEEDBACK_VARYINGS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the number of varying
            variables to capture in transform feedback mode for the program.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns the length of the longest
            variable name to be used for transform feedback, including the null-terminator.</p>
            </dd>
            <dt>
              <span class="term">
                <code class="constant">GL_VALIDATE_STATUS</code>
              </span>
            </dt>
            <dd>
              <p>
            </p>
              <p> <em class="parameter"><code>params</code></em> returns
            <code class="constant">GL_TRUE</code> or if the last
            validation operation on
            <em class="parameter"><code>program</code></em> was successful, and
            <code class="constant">GL_FALSE</code>
            otherwise.</p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="notes">
        <h2>Notes</h2>
        <p>If an error is generated, no change is made to the
    contents of <em class="parameter"><code>params</code></em>.</p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p><code class="constant">GL_INVALID_VALUE</code>
    is generated if <em class="parameter"><code>program</code></em>
    is not a value generated by OpenGL.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code>
    is generated if <em class="parameter"><code>program</code></em>
    does not refer to a program object.</p>
        <p><code class="constant">GL_INVALID_ENUM</code>
    is generated if <em class="parameter"><code>pname</code></em>
    is not an accepted value.</p>
      </div>
      <div class="refsect1" id="associatedgets">
        <h2>Associated Gets</h2>
        <p><a class="citerefentry" href="glGetActiveAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetActiveAttrib</span></span></a>
    with argument <em class="parameter"><code>program</code></em></p>
        <p><a class="citerefentry" href="glGetActiveUniform.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetActiveUniform</span></span></a>
    with argument <em class="parameter"><code>program</code></em></p>
        <p><a class="citerefentry" href="glGetAttachedShaders.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetAttachedShaders</span></span></a>
    with argument <em class="parameter"><code>program</code></em></p>
        <p><a class="citerefentry" href="glGetProgramInfoLog.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetProgramInfoLog</span></span></a>
    with argument <em class="parameter"><code>program</code></em></p>
        <p><a class="citerefentry" href="glIsProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glIsProgram</span></span></a>
    <em class="parameter"><code/></em></p>
      </div>
      <div class="refsect1" id="versions">
        <h2>API Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="3">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">glGetProgramiv</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p><a class="citerefentry" href="glAttachShader.xhtml"><span class="citerefentry"><span class="refentrytitle">glAttachShader</span></span></a>,
    <a class="citerefentry" href="glCreateProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glCreateProgram</span></span></a>,
    <a class="citerefentry" href="glDeleteProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glDeleteProgram</span></span></a>,
    <a class="citerefentry" href="glGetProgramiv.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetProgramiv</span></span></a>,
    <a class="citerefentry" href="glGetShaderiv.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetShaderiv</span></span></a>,
    <a class="citerefentry" href="glLinkProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glLinkProgram</span></span></a>,
    <a class="citerefentry" href="glValidateProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glValidateProgram</span></span></a></p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2003-2005 3Dlabs Inc. Ltd.
            Copyright <span class="trademark"/>© 2010-2020 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glUniform - OpenGL ES 3.1 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glUniform">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glUniform — Specify the value of a uniform variable for the current program object</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform1f</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v0</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform2f</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v1</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform3f</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v1</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v2</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform4f</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v1</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v2</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLfloat <var class="pdparam">v3</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform1i</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v0</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform2i</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v1</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform3i</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v1</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v2</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform4i</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v1</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v2</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v3</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform1ui</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v0</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform2ui</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v1</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform3ui</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v1</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v2</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform4ui</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">v0</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v1</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v2</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">v3</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform1fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform2fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform3fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform4fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform1iv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform2iv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform3iv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform4iv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform1uiv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLuint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform2uiv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLuint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform3uiv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLuint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniform4uiv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLuint *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix2fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix3fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix4fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix2x3fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix3x2fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix2x4fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix4x2fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix3x4fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glUniformMatrix4x3fv</strong>(</code>
              </td>
              <td>GLint <var class="pdparam">location</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">count</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">transpose</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const GLfloat *<var class="pdparam">value</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>location</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the location of the uniform variable
            to be modified.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>count</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                For the vector (<code class="function">glUniform*v</code>) commands,
                specifies the number of elements that are to be modified.
                This should be 1 if the targeted uniform variable is not an
                array, and 1 or more if it is an array.
            </p>
              <p>
                For the matrix (<code class="function">glUniformMatrix*</code>)
                commands, specifies the number of matrices that are to be
                modified. This should be 1 if the targeted uniform variable
                is not an array of matrices, and 1 or more if it is an array
                of matrices.
            </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>transpose</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                For the matrix commands, specifies whether to transpose the
                matrix as the values are loaded into the uniform variable.
            </p>
            </dd>
            <dt>
              <span class="term">
            <em class="parameter"><code>v0</code></em>,
            <em class="parameter"><code>v1</code></em>,
            <em class="parameter"><code>v2</code></em>,
            <em class="parameter"><code>v3</code></em>
        </span>
            </dt>
            <dd>
              <p>
                For the scalar commands, specifies the new values to be used
                for the specified uniform variable.
            </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>value</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                For the vector and matrix commands, specifies a pointer to
                an array of <em class="parameter"><code>count</code></em> values that will be
                used to update the specified uniform variable.
            </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p><code class="function">glUniform</code>* modifies the value of a
    uniform variable or a uniform variable array in the default
    uniform block. The location of
    the uniform variable to be modified is specified by
    <em class="parameter"><code>location</code></em>, which should be a value
    returned by
    <a class="citerefentry" href="glGetUniformLocation.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetUniformLocation</span></span></a>.
    <code class="function">glUniform</code> operates on the program object
    that was made part of current state by calling
    <a class="citerefentry" href="glUseProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glUseProgram</span></span></a>.</p>
        <p>The commands <code class="function">glUniform{1|2|3|4}{f|i|ui}</code>
    are used to change the value of the uniform variable specified
    by <em class="parameter"><code>location</code></em> using the values passed as
    arguments. The number specified in the command should match the
    number of components in the data type of the specified uniform
    variable (e.g., <code class="function">1</code> for <code class="code">float</code>, <code class="code">int</code>, <code class="code">unsigned int</code>, <code class="code">bool</code>;
    <code class="function">2</code> for <code class="code">vec2</code>, <code class="code">ivec2</code>, <code class="code">uvec2</code>, <code class="code">bvec2</code>, etc.). The suffix
    <code class="function">f</code> indicates that floating-point values are
    being passed; the suffix <code class="function">i</code> indicates that
    integer values are being passed; the suffix <code class="function">ui</code> indicates that
    unsigned integer values are being passed, and this type should also match
    the data type of the specified uniform variable. The
    <code class="function">i</code> variants of this function should be used
    to provide values for uniform variables defined as <code class="code">int</code>, <code class="code">ivec2</code>,
    <code class="code">ivec3</code>, <code class="code">ivec4</code>, or arrays of these. The
    <code class="function">ui</code> variants of this function should be used
    to provide values for uniform variables defined as <code class="code">unsigned int</code>, <code class="code">uvec2</code>,
    <code class="code">uvec3</code>, <code class="code">uvec4</code>, or arrays of these. The <code class="function">f</code>
    variants should be used to provide values for uniform variables
    of type <code class="code">float</code>, <code class="code">vec2</code>, <code class="code">vec3</code>, <code class="code">vec4</code>, or arrays of these. Either the
    <code class="function">i</code>, <code class="function">ui</code> or <code class="function">f</code> variants
    may be used to provide values for uniform variables of type
    <code class="code">bool</code>, <code class="code">bvec2</code>, <code class="code">bvec3</code>, <code class="code">bvec4</code>, or arrays of these. The uniform
    variable will be set to <code class="code">false</code> if the input value is 0 or 0.0f,
    and it will be set to <code class="code">true</code> otherwise.</p>
        <p>All active uniform variables defined in a program object
    are initialized to 0 when the program object is linked
    successfully. They retain the values assigned to them by a call
    to <code class="function">glUniform </code> until the next successful
    link operation occurs on the program object, when they are once
    again initialized to 0.</p>
        <p>The commands <code class="function">glUniform{1|2|3|4}{f|i|ui}v</code>
    can be used to modify a single uniform variable or a uniform
    variable array. These commands pass a count and a pointer to the
    values to be loaded into a uniform variable or a uniform
    variable array. A count of 1 should be used if modifying the
    value of a single uniform variable, and a count of 1 or greater
    can be used to modify an entire array or part of an array. When
    loading <span class="emphasis"><em>n</em></span> elements starting at an arbitrary
    position <span class="emphasis"><em>m</em></span> in a uniform variable array,
    elements <span class="emphasis"><em>m</em></span> + <span class="emphasis"><em>n</em></span> - 1 in
    the array will be replaced with the new values. If
    <em class="parameter"><code>m</code></em> + <em class="parameter"><code>n</code></em> - 1 is
    larger than the size of the uniform variable array, values for
    all array elements beyond the end of the array will be ignored.
    The number specified in the name of the command indicates the
    number of components for each element in
    <em class="parameter"><code>value</code></em>, and it should match the number of
    components in the data type of the specified uniform variable
    (e.g., <code class="function">1</code> for float, int, bool;
    <code class="function">2</code> for vec2, ivec2, bvec2, etc.). The data
    type specified in the name of the command must match the data
    type for the specified uniform variable as described previously
    for <code class="function">glUniform{1|2|3|4}{f|i|ui}</code>.</p>
        <p>For uniform variable arrays, each element of the array is
    considered to be of the type indicated in the name of the
    command (e.g., <code class="function">glUniform3f</code> or
    <code class="function">glUniform3fv</code> can be used to load a uniform
    variable array of type vec3). The number of elements of the
    uniform variable array to be modified is specified by
    <em class="parameter"><code>count</code></em></p>
        <p>The commands
    <code class="function">glUniformMatrix{2|3|4|2x3|3x2|2x4|4x2|3x4|4x3}fv</code> 
    are used to modify a matrix or an array of matrices. The numbers in the
    command name are interpreted as the dimensionality of the matrix.
    The number <code class="function">2</code> indicates a 2 × 2 matrix
    (i.e., 4 values), the number <code class="function">3</code> indicates a
    3 × 3 matrix (i.e., 9 values), and the number
    <code class="function">4</code> indicates a 4 × 4 matrix (i.e., 16
    values). Non-square matrix dimensionality is explicit, with the first
    number representing the number of columns and the second number
    representing the number of rows.  For example, 
    <code class="function">2x4</code> indicates a 2 × 4 matrix with 2 columns
    and 4 rows (i.e., 8 values).
    If <em class="parameter"><code>transpose</code></em> is
    <code class="constant">GL_FALSE</code>, each matrix is assumed to be
    supplied in column major order. If
    <em class="parameter"><code>transpose</code></em> is
    <code class="constant">GL_TRUE</code>, each matrix is assumed to be
    supplied in row major order. The <em class="parameter"><code>count</code></em>
    argument indicates the number of matrices to be passed. A count
    of 1 should be used if modifying the value of a single matrix,
    and a count greater than 1 can be used to modify an array of
    matrices.</p>
      </div>
      <div class="refsect1" id="notes">
        <h2>Notes</h2>
        <p><code class="function">glUniform1i</code> and
    <code class="function">glUniform1iv</code> are the only two functions
    that may be used to load uniform variables defined as sampler
    types. Loading samplers with any other function will result in a
    <code class="constant">GL_INVALID_OPERATION</code> error.</p>
        <p>If <em class="parameter"><code>count</code></em> is greater than 1 and the
    indicated uniform variable is not an array, a
    <code class="constant">GL_INVALID_OPERATION</code> error is generated and the
    specified uniform variable will remain unchanged.</p>
        <p>Other than the preceding exceptions, if the type and size
    of the uniform variable as defined in the shader do not match
    the type and size specified in the name of the command used to
    load its value, a <code class="constant">GL_INVALID_OPERATION</code> error will
    be generated and the specified uniform variable will remain
    unchanged.</p>
        <p>If <em class="parameter"><code>location</code></em> is a value other than
    -1 and it does not represent a valid uniform variable location
    in the current program object, an error will be generated, and
    no changes will be made to the uniform variable storage of the
    current program object. If <em class="parameter"><code>location</code></em> is
    equal to -1, the data passed in will be silently ignored and the
    specified uniform variable will not be changed.</p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if there
    is no current program object.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if the
    size of the uniform variable declared in the shader does not
    match the size indicated by the <code class="function">glUniform</code>
    command.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if one of
    the signed or unsigned integer variants of this function is used to load a uniform
    variable of type <code class="code">float</code>, <code class="code">vec2</code>, <code class="code">vec3</code>, <code class="code">vec4</code>, or an array of these,
    or if one of the floating-point variants of this function is
    used to load a uniform variable of type <code class="code">int</code>, <code class="code">ivec2</code>, <code class="code">ivec3</code>,
    <code class="code">ivec4</code>, <code class="code">unsigned int</code>, <code class="code">uvec2</code>, <code class="code">uvec3</code>,
    <code class="code">uvec4</code>, or an array of these.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if one of
    the signed integer variants of this function is used to load a uniform
    variable of type <code class="code">unsigned int</code>, <code class="code">uvec2</code>, <code class="code">uvec3</code>,
    <code class="code">uvec4</code>, or an array of these.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if one of
    the unsigned integer variants of this function is used to load a uniform
    variable of type <code class="code">int</code>, <code class="code">ivec2</code>, <code class="code">ivec3</code>,
    <code class="code">ivec4</code>, or an array of these.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if
    <em class="parameter"><code>location</code></em> is an invalid uniform location
    for the current program object and
    <em class="parameter"><code>location</code></em> is not equal to -1.</p>
        <p><code class="constant">GL_INVALID_VALUE</code> is generated if
    <em class="parameter"><code>count</code></em> is less than 0.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if
    <em class="parameter"><code>count</code></em> is greater than 1 and the indicated
    uniform variable is not an array variable.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> is generated if a
    sampler is loaded using a command other than
    <code class="function">glUniform1i</code> and
    <code class="function">glUniform1iv</code>.</p>
      </div>
      <div class="refsect1" id="associatedgets">
        <h2>Associated Gets</h2>
        <p><a class="citerefentry" href="glGet.xhtml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a>
    with the argument <code class="constant">GL_CURRENT_PROGRAM</code></p>
        <p><a class="citerefentry" href="glGetActiveUniform.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetActiveUniform</span></span></a>
    with the handle of a program object and the index of an active uniform variable</p>
        <p><a class="citerefentry" href="glGetUniform.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetUniform</span></span></a>
    with the handle of a program object and the location of a
    uniform variable</p>
        <p><a class="citerefentry" href="glGetUniformLocation.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetUniformLocation</span></span></a>
    with the handle of a program object and the name of a uniform
    variable</p>
      </div>
      <div class="refsect1" id="versions">
        <h2>API Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="3">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform1f</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform2f</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform3f</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform4f</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform1i</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform2i</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform3i</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform4i</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform1ui</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform2ui</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform3ui</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform4ui</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform1fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform2fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform3fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform4fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform1iv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform2iv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform3iv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform4iv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform1uiv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform2uiv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform3uiv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniform4uiv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix2fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix3fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix4fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix2x3fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix3x2fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix2x4fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix4x2fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glUniformMatrix3x4fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">
                  <code class="function">glUniformMatrix4x3fv</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p><a class="citerefentry" href="glLinkProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glLinkProgram</span></span></a>,
        <a class="citerefentry" href="glUseProgram.xhtml"><span class="citerefentry"><span class="refentrytitle">glUseProgram</span></span></a></p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2003-2005 3Dlabs Inc. Ltd. 
            Copyright <span class="trademark"/>© 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

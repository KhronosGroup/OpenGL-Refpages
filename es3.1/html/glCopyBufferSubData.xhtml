<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glCopyBufferSubData - OpenGL ES 3.1 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glCopyBufferSubData">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glCopyBufferSubData — copy part of the data store of a buffer object to the data store of another buffer object</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glCopyBufferSubData</strong>(</code>
              </td>
              <td>GLenum <var class="pdparam">readtarget</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">writetarget</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLintptr <var class="pdparam">readoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLintptr <var class="pdparam">writeoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizeiptr <var class="pdparam">size</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>readtarget</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the target from whose data store data should be read.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>writetarget</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the target to whose data store data should be written.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>readoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the offset, in basic machine units, within the data store of <em class="parameter"><code>readtarget</code></em> from which data should be read.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>writeoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the offset, in basic machine units, within the data store of <em class="parameter"><code>writetarget</code></em> to which data should be written.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>size</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the size, in basic machine units, of the data to be copied from <em class="parameter"><code>readtarget</code></em> to <em class="parameter"><code>writetarget</code></em>.
                </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p>
            <code class="function">glCopyBufferSubData</code> copies part of the data store attached to <em class="parameter"><code>readtarget</code></em> to the
            data store attached to <em class="parameter"><code>writetarget</code></em>. The number of basic machine units indicated by <em class="parameter"><code>size</code></em>
            is copied from the source, at offset <em class="parameter"><code>readoffset</code></em> to the destination at <em class="parameter"><code>writeoffset</code></em>,
            also in basic machine units.
        </p>
        <p>
            <em class="parameter"><code>readtarget</code></em> and <em class="parameter"><code>writetarget</code></em> must be <code class="constant">GL_ARRAY_BUFFER</code>,
            <code class="constant">GL_COPY_READ_BUFFER</code>, <code class="constant">GL_COPY_WRITE_BUFFER</code>, <code class="constant">GL_ELEMENT_ARRAY_BUFFER</code>,
            <code class="constant">GL_PIXEL_PACK_BUFFER</code>, <code class="constant">GL_PIXEL_UNPACK_BUFFER</code>,
            <code class="constant">GL_TRANSFORM_FEEDBACK_BUFFER</code> or <code class="constant">GL_UNIFORM_BUFFER</code>. Any of these targets may be used,
            although the targets <code class="constant">GL_COPY_READ_BUFFER</code> and <code class="constant">GL_COPY_WRITE_BUFFER</code> are provided
            specifically to allow copies between buffers without disturbing other GL state.
        </p>
        <p>
            <em class="parameter"><code>readoffset</code></em>, <em class="parameter"><code>writeoffset</code></em> and <em class="parameter"><code>size</code></em> must all be greater than or equal to
            zero. Furthermore, <em class="parameter"><code>readoffset</code></em> + <em class="parameter"><code>size</code></em> must not exceeed the size of the buffer
            object bound to <em class="parameter"><code>readtarget</code></em>, and <em class="parameter"><code>writeoffset</code></em> + <em class="parameter"><code>size</code></em> must not exceeed the
            size of the buffer bound to <em class="parameter"><code>writetarget</code></em>. If the same buffer object is bound to both <em class="parameter"><code>readtarget</code></em>
            and <em class="parameter"><code>writetarget</code></em>, then the ranges specified by <em class="parameter"><code>readoffset</code></em>, <em class="parameter"><code>writeoffset</code></em>
            and <em class="parameter"><code>size</code></em> must not overlap.
        </p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if any of <em class="parameter"><code>readoffset</code></em>, <em class="parameter"><code>writeoffset</code></em>
            or <em class="parameter"><code>size</code></em> is negative, if <em class="parameter"><code>readoffset</code></em> + <em class="parameter"><code>size</code></em> exceeds the
            size of the buffer object bound to <em class="parameter"><code>readtarget</code></em> or if <em class="parameter"><code>writeoffset</code></em> + <em class="parameter"><code>size</code></em>
            exceeds the size of the buffer object bound to <em class="parameter"><code>writetarget</code></em>.
        </p>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if the same buffer object is bound to both <em class="parameter"><code>readtarget</code></em>
            and <em class="parameter"><code>writetarget</code></em> and the ranges [<em class="parameter"><code>readoffset</code></em>, <em class="parameter"><code>readoffset</code></em> +
            <em class="parameter"><code>size</code></em>) and [<em class="parameter"><code>writeoffset</code></em>, <em class="parameter"><code>writeoffset</code></em> + <em class="parameter"><code>size</code></em>)
            overlap.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if zero is bound to <em class="parameter"><code>readtarget</code></em> or <em class="parameter"><code>writetarget</code></em>.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if the buffer object bound to either <em class="parameter"><code>readtarget</code></em> or <em class="parameter"><code>writetarget</code></em>
            is mapped.
        </p>
      </div>
      <div class="refsect1" id="versions">
        <h2>API Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="3">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">glCopyBufferSubData</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
            <a class="citerefentry" href="glGenBuffers.xhtml"><span class="citerefentry"><span class="refentrytitle">glGenBuffers</span></span></a>,
            <a class="citerefentry" href="glBindBuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>,
            <a class="citerefentry" href="glBufferData.xhtml"><span class="citerefentry"><span class="refentrytitle">glBufferData</span></span></a>,
            <a class="citerefentry" href="glBufferSubData.xhtml"><span class="citerefentry"><span class="refentrytitle">glBufferSubData</span></span></a>,
        </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

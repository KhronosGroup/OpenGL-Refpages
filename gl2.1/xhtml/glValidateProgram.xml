<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd"><!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glValidateProgram</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glValidateProgram"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glValidateProgram — Validates a program object</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glValidateProgram</strong>(</code></td><td>GLuint <var class="pdparam">program</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>program</code></em></span></dt><dd><p>Specifies the handle of the program object to
		    be validated.</p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p><code class="function">glValidateProgram</code> checks to see
	whether the executables contained in
	<em class="parameter"><code>program</code></em> can execute given the current
	OpenGL state. The information generated by the validation
	process will be stored in <em class="parameter"><code>program</code></em>'s
	information log. The validation information may consist of an
	empty string, or it may be a string containing information about
	how the current program object interacts with the rest of
	current OpenGL state. This provides a way for OpenGL
	implementers to convey more information about why the current
	program is inefficient, suboptimal, failing to execute, and so
	on.</p><p>The status of the validation operation will be stored as
	part of the program object's state. This value will be set to
	<code class="constant">GL_TRUE</code> if the validation succeeded, and
	<code class="constant">GL_FALSE</code> otherwise. It can be queried by
	calling
	<a class="citerefentry" href="glGetProgram.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgram</span></span></a>
	with arguments <em class="parameter"><code>program</code></em> and
	<code class="constant">GL_VALIDATE_STATUS</code>. If validation is
	successful, <em class="parameter"><code>program</code></em> is guaranteed to
	execute given the current state. Otherwise,
	<em class="parameter"><code>program</code></em> is guaranteed to not execute.</p><p>This function is typically useful only during application
	development. The informational string stored in the information
	log is completely implementation dependent; therefore, an
	application should not expect different OpenGL implementations
	to produce identical information strings.</p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p><code class="function">glValidateProgram</code> is available only
	if the GL version is 2.0 or greater.</p><p>This function mimics the validation operation that OpenGL
	implementations must perform when rendering commands are issued
	while programmable shaders are part of current state. The error
	<code class="constant">GL_INVALID_OPERATION</code> will be generated by
	<a class="citerefentry" href="glBegin.xml"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>,
	<a class="citerefentry" href="glRasterPos.xml"><span class="citerefentry"><span class="refentrytitle">glRasterPos</span></span></a>,
	or any command that performs an implicit call to
	<a class="citerefentry" href="glBegin.xml"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>
	if:</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p>any two active samplers in the current program
		object are of different types, but refer to the same
		texture image unit,</p></li><li class="listitem"><p>any active sampler in the current program object
		refers to a texture image unit where fixed-function
		fragment processing accesses a texture target that does
		not match the sampler type, or</p></li><li class="listitem"><p>the sum of the number of active samplers in the
		program and the number of texture image units enabled
		for fixed-function fragment processing exceeds the
		combined limit on the total number of texture image
		units allowed.</p></li></ul></div><p>It may be difficult or cause a performance degradation for
	applications to catch these errors when rendering commands are
	issued. Therefore, applications are advised to make calls to
	<code class="function">glValidateProgram</code> to detect these issues
	during application development.</p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_VALUE</code> is generated if
	<em class="parameter"><code>program</code></em> is not a value generated by
	OpenGL.</p><p><code class="constant">GL_INVALID_OPERATION</code> is generated if
	<em class="parameter"><code>program</code></em> is not a program object.</p><p><code class="constant">GL_INVALID_OPERATION</code> is generated if
	<code class="function">glValidateProgram</code> is executed between the
	execution of
	<a class="citerefentry" href="glBegin.xml"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a>
	and the corresponding execution of
	<a class="citerefentry" href="glEnd.xml"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.</p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p><a class="citerefentry" href="glGetProgram.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgram</span></span></a>
	with arguments <em class="parameter"><code>program</code></em> and
	<code class="constant">GL_VALIDATE_STATUS</code></p><p><a class="citerefentry" href="glGetProgramInfoLog.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgramInfoLog</span></span></a>
	with argument <em class="parameter"><code>program</code></em></p><p><a class="citerefentry" href="glIsProgram.xml"><span class="citerefentry"><span class="refentrytitle">glIsProgram</span></span></a></p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p><a class="citerefentry" href="glLinkProgram.xml"><span class="citerefentry"><span class="refentrytitle">glLinkProgram</span></span></a>,
	<a class="citerefentry" href="glUseProgram.xml"><span class="citerefentry"><span class="refentrytitle">glUseProgram</span></span></a></p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd"><!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glCopyConvolutionFilter1D</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glCopyConvolutionFilter1D"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glCopyConvolutionFilter1D — copy pixels into a one-dimensional convolution filter</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glCopyConvolutionFilter1D</strong>(</code></td><td>GLenum <var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">internalformat</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">x</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">y</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">width</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>target</code></em></span></dt><dd><p>
                    Must be <code class="constant">GL_CONVOLUTION_1D</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>internalformat</code></em></span></dt><dd><p>
                    The internal format of the convolution filter kernel.
                    The allowable values are
                    <code class="constant">GL_ALPHA</code>,
                    <code class="constant">GL_ALPHA4</code>,
                    <code class="constant">GL_ALPHA8</code>,
                    <code class="constant">GL_ALPHA12</code>,
                    <code class="constant">GL_ALPHA16</code>,
                    <code class="constant">GL_LUMINANCE</code>,
                    <code class="constant">GL_LUMINANCE4</code>,
                    <code class="constant">GL_LUMINANCE8</code>,
                    <code class="constant">GL_LUMINANCE12</code>,
                    <code class="constant">GL_LUMINANCE16</code>,
                    <code class="constant">GL_LUMINANCE_ALPHA</code>,
                    <code class="constant">GL_LUMINANCE4_ALPHA4</code>,
                    <code class="constant">GL_LUMINANCE6_ALPHA2</code>,
                    <code class="constant">GL_LUMINANCE8_ALPHA8</code>,
                    <code class="constant">GL_LUMINANCE12_ALPHA4</code>,
                    <code class="constant">GL_LUMINANCE12_ALPHA12</code>,
                    <code class="constant">GL_LUMINANCE16_ALPHA16</code>,
                    <code class="constant">GL_INTENSITY</code>,
                    <code class="constant">GL_INTENSITY4</code>,
                    <code class="constant">GL_INTENSITY8</code>,
                    <code class="constant">GL_INTENSITY12</code>,
                    <code class="constant">GL_INTENSITY16</code>,
                    <code class="constant">GL_R3_G3_B2</code>,
                    <code class="constant">GL_RGB</code>,
                    <code class="constant">GL_RGB4</code>,
                    <code class="constant">GL_RGB5</code>,
                    <code class="constant">GL_RGB8</code>,
                    <code class="constant">GL_RGB10</code>,
                    <code class="constant">GL_RGB12</code>,
                    <code class="constant">GL_RGB16</code>,
                    <code class="constant">GL_RGBA</code>,
                    <code class="constant">GL_RGBA2</code>,
                    <code class="constant">GL_RGBA4</code>,
                    <code class="constant">GL_RGB5_A1</code>,
                    <code class="constant">GL_RGBA8</code>,
                    <code class="constant">GL_RGB10_A2</code>,
                    <code class="constant">GL_RGBA12</code>, or
                    <code class="constant">GL_RGBA16</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>x</code></em>, </span><span class="term"><em class="parameter"><code>y</code></em></span></dt><dd><p>
                    The window space coordinates of the lower-left coordinate of the
                    pixel array to copy.
                </p></dd><dt><span class="term"><em class="parameter"><code>width</code></em></span></dt><dd><p>
                    The width of the pixel array to copy.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glCopyConvolutionFilter1D</code> defines a one-dimensional convolution filter kernel with pixels
            from the current <code class="constant">GL_READ_BUFFER</code> (rather than from main memory,
            as is the case for <a class="citerefentry" href="glConvolutionFilter1D.xml"><span class="citerefentry"><span class="refentrytitle">glConvolutionFilter1D</span></span></a>).
        </p><p>
            The screen-aligned pixel rectangle with lower-left corner at (<em class="parameter"><code>x</code></em>,\ <em class="parameter"><code>y</code></em>),
            width <em class="parameter"><code>width</code></em> and height 1 is used to define
            the convolution filter.  If any pixels within this region are
            outside the window that is associated with the GL context, the
            values obtained for those pixels are undefined.
        </p><p>
            The pixels in the rectangle are processed exactly as if <a class="citerefentry" href="glReadPixels.xml"><span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span></a>
            had been called with <span class="emphasis"><em>format</em></span>
            set to RGBA, but the process stops just before final conversion.
            The R, G, B, and A components of each pixel are next scaled by the four
            1D <code class="constant">GL_CONVOLUTION_FILTER_SCALE</code> parameters and biased by the
            four 1D <code class="constant">GL_CONVOLUTION_FILTER_BIAS</code> parameters.
            (The scale and bias parameters are set by <a class="citerefentry" href="glConvolutionParameter.xml"><span class="citerefentry"><span class="refentrytitle">glConvolutionParameter</span></span></a>
            using the <code class="constant">GL_CONVOLUTION_1D</code> target and the names
            <code class="constant">GL_CONVOLUTION_FILTER_SCALE</code> and <code class="constant">GL_CONVOLUTION_FILTER_BIAS</code>.
            The parameters themselves are vectors of four values that are applied to red,
            green, blue, and alpha, in that order.)
            The R, G, B, and A values are not clamped to [0,1] at any time during this
            process.
        </p><p>
            Each pixel is then converted to the internal format specified by
            <em class="parameter"><code>internalformat</code></em>.
            This conversion simply maps the component values of the pixel (R, G, B,
            and A) to the values included in the internal format (red, green, blue,
            alpha, luminance, and intensity).  The mapping is as follows:
        </p><p>
        </p><div class="informaltable"><table class="informaltable" border="1"><colgroup><col align="left" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /><col align="center" /></colgroup><thead><tr><th align="left"><span class="bold"><strong>
                        Internal Format
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Red
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Green
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Blue
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Alpha
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Luminance
                        </strong></span></th><th align="center"><span class="bold"><strong>
                        Intensity
                        </strong></span></th></tr></thead><tbody><tr><td align="left">
                        <code class="constant">GL_ALPHA</code>
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        A
                        </td><td align="center">
                        </td><td align="center">
                         
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_LUMINANCE</code>
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        R
                        </td><td align="center">
                         
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_LUMINANCE_ALPHA</code>
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        A
                        </td><td align="center">
                        R
                        </td><td align="center">
                         
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_INTENSITY</code>
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                        R
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_RGB</code>
                        </td><td align="center">
                        R
                        </td><td align="center">
                        G
                        </td><td align="center">
                        B
                        </td><td align="center">
                        </td><td align="center">
                        </td><td align="center">
                         
                        </td></tr><tr><td align="left">
                        <code class="constant">GL_RGBA</code>
                        </td><td align="center">
                        R
                        </td><td align="center">
                        G
                        </td><td align="center">
                        B
                        </td><td align="center">
                        A
                        </td><td align="center">
                        </td><td align="center">
                         
                        </td></tr></tbody></table></div><p>
            The red, green, blue, alpha, luminance, and/or intensity components of
            the resulting pixels are stored in floating-point rather than integer
            format.
        </p><p>
            Pixel ordering is such that lower x screen coordinates correspond to
            lower <span class="emphasis"><em>i</em></span> filter image coordinates.
        </p><p>
            Note that after a convolution is performed, the resulting color
            components are also scaled by their corresponding
            <code class="constant">GL_POST_CONVOLUTION_c_SCALE</code> parameters and biased by their
            corresponding <code class="constant">GL_POST_CONVOLUTION_c_BIAS</code> parameters (where
            <span class="emphasis"><em>c</em></span> takes on the values <span class="bold"><strong>RED</strong></span>, <span class="bold"><strong>GREEN</strong></span>, <span class="bold"><strong>BLUE</strong></span>, and
            <span class="bold"><strong>ALPHA</strong></span>).
            These parameters are set by <a class="citerefentry" href="glPixelTransfer.xml"><span class="citerefentry"><span class="refentrytitle">glPixelTransfer</span></span></a>.
        </p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            <code class="function">glCopyConvolutionFilter1D</code> is present only if <code class="code">ARB_imaging</code> is returned when <a class="citerefentry" href="glGetString.xml"><span class="citerefentry"><span class="refentrytitle">glGetString</span></span></a>
            is called with an argument of <code class="constant">GL_EXTENSIONS</code>.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>target</code></em> is not
            <code class="constant">GL_CONVOLUTION_1D</code>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>internalformat</code></em> is not one of the
            allowable values.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>width</code></em> is less than zero or greater
            than the maximum supported value.
            This value may be queried with <a class="citerefentry" href="glGetConvolutionParameter.xml"><span class="citerefentry"><span class="refentrytitle">glGetConvolutionParameter</span></span></a>
            using target <code class="constant">GL_CONVOLUTION_1D</code> and name
            <code class="constant">GL_MAX_CONVOLUTION_WIDTH</code>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <code class="function">glCopyConvolutionFilter1D</code> is executed
            between the execution of <a class="citerefentry" href="glBegin.xml"><span class="citerefentry"><span class="refentrytitle">glBegin</span></span></a> and the corresponding
            execution of <a class="citerefentry" href="glEnd.xml"><span class="citerefentry"><span class="refentrytitle">glEnd</span></span></a>.
        </p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGetConvolutionParameter.xml"><span class="citerefentry"><span class="refentrytitle">glGetConvolutionParameter</span></span></a>, <a class="citerefentry" href="glGetConvolutionFilter.xml"><span class="citerefentry"><span class="refentrytitle">glGetConvolutionFilter</span></span></a>
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glConvolutionFilter1D.xml"><span class="citerefentry"><span class="refentrytitle">glConvolutionFilter1D</span></span></a>,
            <a class="citerefentry" href="glConvolutionParameter.xml"><span class="citerefentry"><span class="refentrytitle">glConvolutionParameter</span></span></a>,
            <a class="citerefentry" href="glPixelTransfer.xml"><span class="citerefentry"><span class="refentrytitle">glPixelTransfer</span></span></a>
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt" target="_top">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</a>.
        </p></div></div></body></html>
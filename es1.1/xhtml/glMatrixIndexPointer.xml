<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd"><!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glMatrixIndexPointer</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glMatrixIndexPointer"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glMatrixIndexPointer — define an array of matrix indices</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glMatrixIndexPointerOES</strong>(</code></td><td>GLint <var class="pdparam">size</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">type</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">stride</var>, </td></tr><tr><td> </td><td>const void * <var class="pdparam">pointer</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term">
                    <em class="parameter"><code>size</code></em>
                </span></dt><dd><p>
                    Specifies the number of matrix indices per vertex.
                    Must be is less than or equal to
                    <code class="constant">GL_MAX_VERTEX_UNITS_OES</code>.
                    The initial value is <code class="constant">0</code>.
                    </p></dd><dt><span class="term">
                    <em class="parameter"><code>type</code></em>
                </span></dt><dd><p>
                    Specifies the data type of each matrix index in the
                    array. Symbolic constant
                    <code class="constant">GL_UNSIGNED_BYTE</code> is accepted.
                    The initial value is
                    <code class="constant">GL_UNSIGNED_BYTE</code>.
                    </p></dd><dt><span class="term">
                    <em class="parameter"><code>stride</code></em>
                </span></dt><dd><p>
                    Specifies the byte offset between consecutive
                    matrix indices. If <em class="parameter"><code>stride</code></em>
                    is 0, the matrix indices are understood to be tightly packed in
                    the array. The initial value is <code class="constant">0</code>.
                    </p></dd><dt><span class="term">
                    <em class="parameter"><code>pointer</code></em>
                </span></dt><dd><p>
                    Specifies a pointer to the first matrix index of the
                    first vertex in the array. The initial value is <code class="constant">0</code>.
                    </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
        <code class="function">glMatrixIndexPointer</code>
        specifies the location and data of an array of matrix indices
        to use when rendering. <em class="parameter"><code>size</code></em>
        specifies the number of matrix indices per vertex and
        <em class="parameter"><code>type</code></em> the data type of the coordinates.
        <em class="parameter"><code>stride</code></em>
        specifies the byte stride from one matrix index to the next, allowing
        vertices and attributes to be packed into a single array or
        stored in separate arrays. (Single-array storage may be more
        efficient on some implementations.)
        </p><p>
        These matrices indices are used to blend corresponding matrices for a given vertex.
        </p><p>
        When a matrix index array is
        specified,
        <em class="parameter"><code>size</code></em>,
        <em class="parameter"><code>type</code></em>,
        <em class="parameter"><code>stride</code></em>, and
        <em class="parameter"><code>pointer</code></em> are saved as client-side state.
        </p><p>
        If the matrix index array is enabled, it is used when
        <a class="citerefentry" href="glDrawArrays.xml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
        or
        <a class="citerefentry" href="glDrawElements.xml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>
        is called.
        To enable and disable the matrix index array, call
        <a class="citerefentry" href="glEnableClientState.xml"><span class="citerefentry"><span class="refentrytitle">glEnableClientState</span></span></a>
        and
        <a class="citerefentry" href="glDisableClientState.xml"><span class="citerefentry"><span class="refentrytitle">glDisableClientState</span></span></a>
        with the argument
        <code class="constant">GL_MATRIX_INDEX_ARRAY_OES</code>.
        The matrix index array is initially disabled and isn't accessed when
        <a class="citerefentry" href="glDrawArrays.xml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a> or
        <a class="citerefentry" href="glDrawElements.xml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>
        is called.
        </p><p>
        Use
        <a class="citerefentry" href="glDrawArrays.xml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>
        to construct a sequence of primitives (all of the same type)
        from prespecified vertex and vertex attribute arrays. Use
        <a class="citerefentry" href="glDrawElements.xml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>
        to construct a sequence of primitives by indexing vertices and
        vertex attributes.
        </p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
        <code class="function">glMatrixIndexPointer</code>
        is typically implemented on the client side.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
        <code class="constant">GL_INVALID_VALUE</code> is generated if
        <em class="parameter"><code>size</code></em> is greater than
        <code class="constant">GL_MAX_VERTEX_UNITS_OES</code>.
        </p><p>
        <code class="constant">GL_INVALID_ENUM</code> is generated if
        <em class="parameter"><code>type</code></em> is not an accepted value.
        </p><p>
        <code class="constant">GL_INVALID_VALUE</code> is generated if
        <em class="parameter"><code>stride</code></em> is negative.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glCurrentPaletteMatrix.xml"><span class="citerefentry"><span class="refentrytitle">glCurrentPaletteMatrix</span></span></a>,
            <a class="citerefentry" href="glDrawArrays.xml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
            <a class="citerefentry" href="glDrawElements.xml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
            <a class="citerefentry" href="glLoadPaletteFromModelViewMatrix.xml"><span class="citerefentry"><span class="refentrytitle">glLoadPaletteFromModelViewMatrix</span></span></a>,
            <a class="citerefentry" href="glMatrixMode.xml"><span class="citerefentry"><span class="refentrytitle">glMatrixMode</span></span></a>,
            <a class="citerefentry" href="glWeightPointer.xml"><span class="citerefentry"><span class="refentrytitle">glWeightPointer</span></span></a>,
        </p></div><div class="refsect1"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2003-2004
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt" target="_top">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</a>.
        </p></div></div></body></html>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd"><!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glDrawArrays</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glDrawArrays"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glDrawArrays — render primitives from array data</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glDrawArrays</strong>(</code></td><td>GLenum <var class="pdparam">mode</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">first</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">count</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term">
                    <em class="parameter"><code>mode</code></em>
                </span></dt><dd><p>Specifies what kind of primitives to render.
                    Symbolic constants
                    <code class="constant">GL_POINTS</code>,
                    <code class="constant">GL_LINE_STRIP</code>,
                    <code class="constant">GL_LINE_LOOP</code>,
                    <code class="constant">GL_LINES</code>,
                    <code class="constant">GL_TRIANGLE_STRIP</code>,
                    <code class="constant">GL_TRIANGLE_FAN</code>, and
                    <code class="constant">GL_TRIANGLES</code> are accepted.</p></dd><dt><span class="term">
                    <em class="parameter"><code>first</code></em>
                </span></dt><dd><p>Specifies the starting index in the enabled arrays.</p></dd><dt><span class="term">
                    <em class="parameter"><code>count</code></em>
                </span></dt><dd><p>Specifies the number of indices to be rendered.</p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
        <code class="function">glDrawArrays</code>
        specifies multiple geometric primitives with very few
        subroutine calls. You can prespecify separate arrays of
        vertices, normals, colors, and texture coordinates and use them
        to construct a sequence of primitives with a single call to
        <code class="function">glDrawArrays</code>.</p><p>When
        <code class="function">glDrawArrays</code> is called, it uses
        <em class="parameter"><code>count</code></em>
        sequential elements from each enabled array to construct a
        sequence of geometric primitives, beginning with element
        <em class="parameter"><code>first</code></em>.
        <em class="parameter"><code>mode</code></em>
        specifies what kind of primitives are constructed, and how the
        array elements construct those primitives. If
        <code class="constant">GL_VERTEX_ARRAY</code>
        is not enabled, no geometric primitives are generated.</p><p>Vertex attributes that are modified by
        <code class="function">glDrawArrays</code> have an unspecified value after
        <code class="function">glDrawArrays</code> returns. For example, if
        <code class="constant">GL_COLOR_ARRAY</code>
        is enabled, the value of the current color is undefined after
        <code class="function">glDrawArrays</code>
        executes. Attributes that aren't modified remain well defined.</p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_ENUM</code> is generated if
        <em class="parameter"><code>mode</code></em> is not an accepted value.</p><p><code class="constant">GL_INVALID_VALUE</code> is generated if
        <em class="parameter"><code>count</code></em> is negative.</p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
        <a class="citerefentry" href="glClientActiveTexture.xml"><span class="citerefentry"><span class="refentrytitle">glClientActiveTexture</span></span></a>,
        <a class="citerefentry" href="glColorPointer.xml"><span class="citerefentry"><span class="refentrytitle">glColorPointer</span></span></a>,
        <a class="citerefentry" href="glDrawElements.xml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
        <a class="citerefentry" href="glNormalPointer.xml"><span class="citerefentry"><span class="refentrytitle">glNormalPointer</span></span></a>,
        <a class="citerefentry" href="glTexCoordPointer.xml"><span class="citerefentry"><span class="refentrytitle">glTexCoordPointer</span></span></a>,
        <a class="citerefentry" href="glVertexPointer.xml"><span class="citerefentry"><span class="refentrytitle">glVertexPointer</span></span></a>
        </p></div><div class="refsect1"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2003-2004
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt" target="_top">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</a>.
        </p></div></div></body></html>
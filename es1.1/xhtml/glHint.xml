<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd"><!-- saved from url=(0013)about:internet -->
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>glHint</title><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot" /></head><body><div class="refentry"><a id="glHint"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glHint — specify implementation-specific hints</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glHint</strong>(</code></td><td>GLenum <var class="pdparam">target</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">mode</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term">
                    <em class="parameter"><code>target</code></em>
                </span></dt><dd><p>Specifies a symbolic constant indicating the
                    behavior to be controlled.
                    <code class="constant">GL_FOG_HINT</code> ,
                    <code class="constant">GL_GENERATE_MIPMAP_HINT</code> ,
                    <code class="constant">GL_LINE_SMOOTH_HINT</code> ,
                    <code class="constant">GL_PERSPECTIVE_CORRECTION_HINT</code>, and
                    <code class="constant">GL_POINT_SMOOTH_HINT</code> are accepted.</p></dd><dt><span class="term">
                    <em class="parameter"><code>mode</code></em>
                </span></dt><dd><p>Specifies a symbolic constant indicating the
                    desired behavior.
                    <code class="constant">GL_FASTEST</code>,
                    <code class="constant">GL_NICEST</code>, and
                    <code class="constant">GL_DONT_CARE</code> are accepted.</p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>Certain aspects of GL behavior, when there is room for
        interpretation, can be controlled with hints. A hint is
        specified with two arguments.  <em class="parameter"><code>target</code></em>
        is a symbolic constant indicating the behavior to be
        controlled, and <em class="parameter"><code>mode</code></em>
        is another symbolic constant indicating the desired behavior.
        The initial value for each <em class="parameter"><code>target</code></em> is
        <code class="constant">GL_DONT_CARE</code>.
        <em class="parameter"><code>mode</code></em> can be one of the following:</p><div class="variablelist"><dl class="variablelist"><dt><span class="term">
                    <code class="constant">GL_FASTEST</code>
                </span></dt><dd><p>The most efficient option should be chosen.</p></dd><dt><span class="term">
                    <code class="constant">GL_NICEST</code>
                </span></dt><dd><p>The most correct, or highest quality, option should
                    be chosen.</p></dd><dt><span class="term">
                    <code class="constant">GL_DONT_CARE</code>
                </span></dt><dd><p>No preference.</p></dd></dl></div><p>Though the implementation aspects that can be hinted are
        well defined, the interpretation of the hints depends on the
        implementation. The hint aspects that can be specified with
        <em class="parameter"><code>target</code></em>,
        along with suggested semantics, are as follows:</p><div class="variablelist"><dl class="variablelist"><dt><span class="term">
                    <code class="constant">GL_FOG_HINT</code>
                </span></dt><dd><p>Indicates the accuracy of fog calculation. If
                    per-pixel fog calculation is not efficiently supported by
                    the GL implementation, hinting
                    <code class="constant">GL_DONT_CARE</code> or
                    <code class="constant">GL_FASTEST</code>
                    can result in per-vertex calculation of fog effects.</p></dd><dt><span class="term">
                    <code class="constant">GL_GENERATE_MIPMAP_HINT</code>
                </span></dt><dd><p>
                    Indicates the desired quality and performance of automatic mipmap level generation.
                    </p></dd><dt><span class="term">
                    <code class="constant">GL_LINE_SMOOTH_HINT</code>
                </span></dt><dd><p>Indicates the sampling quality of antialiased
                    lines. If a larger filter function is applied, hinting
                    <code class="constant">GL_NICEST</code>

                    can result in more pixel fragments being generated during
                    rasterization.</p></dd><dt><span class="term">
                    <code class="constant">GL_PERSPECTIVE_CORRECTION_HINT</code>
                </span></dt><dd><p>Indicates the quality of color and texture
                    coordinate interpolation. If perspective-corrected
                    parameter interpolation is not efficiently supported by
                    the GL implementation, hinting <code class="constant">GL_DONT_CARE</code> or
                    <code class="constant">GL_FASTEST</code>
                    can result in simple linear interpolation of colors
                    and/or texture coordinates.</p></dd><dt><span class="term">
                    <code class="constant">GL_POINT_SMOOTH_HINT</code>
                </span></dt><dd><p>Indicates the sampling quality of antialiased
                    points. If a larger filter function is applied, hinting
                    <code class="constant">GL_NICEST</code>
                    can result in more pixel fragments being generated during
                    rasterization.</p></dd></dl></div></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>The interpretation of hints depends on the
        implementation. Some implementations ignore
        <code class="function">glHint</code>
        settings.</p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p><code class="constant">GL_INVALID_ENUM</code> is generated if either
        <em class="parameter"><code>target</code></em> or <em class="parameter"><code>mode</code></em>
        is not an accepted value.</p></div><div class="refsect1"><a id="copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2003-2004
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <a class="ulink" href="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt" target="_top">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</a>.
        </p></div></div></body></html>
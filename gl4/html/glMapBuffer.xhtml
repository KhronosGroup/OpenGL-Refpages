<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glMapBuffer - OpenGL 4 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.1"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glMapBuffer">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glMapBuffer, glMapNamedBuffer — map all of a buffer object's data store into the client's address space</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void *<strong class="fsfunc">glMapBuffer</strong>(</code>
              </td>
              <td>GLenum <var class="pdparam">target</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">access</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void *<strong class="fsfunc">glMapNamedBuffer</strong>(</code>
              </td>
              <td>GLuint <var class="pdparam">buffer</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">access</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>target</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the target to which the buffer object is bound
                    for <code class="function">glMapBuffer</code>, which must be one
                    of the buffer binding targets in the following table:
                </p>
              <div class="informaltable">
                <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
                  <colgroup>
                    <col style="text-align: left; " class="col1"/>
                    <col style="text-align: left; " class="col2"/>
                  </colgroup>
                  <thead>
                    <tr>
                      <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <span class="bold">
                          <strong>Buffer Binding Target</strong>
                        </span>
                      </th>
                      <th style="text-align: left; border-bottom: 2px solid ; ">
                        <span class="bold">
                          <strong>Purpose</strong>
                        </span>
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_ARRAY_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Vertex attributes</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_ATOMIC_COUNTER_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Atomic counter storage</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_COPY_READ_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Buffer copy source</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_COPY_WRITE_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Buffer copy destination</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_DISPATCH_INDIRECT_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Indirect compute dispatch commands</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_DRAW_INDIRECT_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Indirect command arguments</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_ELEMENT_ARRAY_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Vertex array indices</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_PIXEL_PACK_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Pixel read target</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_PIXEL_UNPACK_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Texture data source</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_QUERY_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Query result buffer</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_SHADER_STORAGE_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Read-write storage for shaders</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_TEXTURE_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Texture data buffer</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                        <code class="constant">GL_TRANSFORM_FEEDBACK_BUFFER</code>
                      </td>
                      <td style="text-align: left; border-bottom: 2px solid ; ">Transform feedback buffer</td>
                    </tr>
                    <tr>
                      <td style="text-align: left; border-right: 2px solid ; ">
                        <code class="constant">GL_UNIFORM_BUFFER</code>
                      </td>
                      <td style="text-align: left; ">Uniform block storage</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>buffer</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the name of the buffer object for
                    <code class="function">glMapNamedBuffer</code>.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>access</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the access policy for
                    <code class="function">glMapBuffer</code> and
                    <code class="function">glMapNamedBuffer</code>, indicating
                    whether it will be possible to read from, write to, or
                    both read from and write to the buffer object's mapped
                    data store. The symbolic constant must be
                    <code class="constant">GL_READ_ONLY</code>,
                    <code class="constant">GL_WRITE_ONLY</code>, or
                    <code class="constant">GL_READ_WRITE</code>.
                </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p>
            <code class="function">glMapBuffer</code> and
            <code class="function">glMapNamedBuffer</code> map the entire data store
            of a specified buffer object into the client's address space.
            The data can then be directly read and/or written relative to
            the returned pointer, depending on the specified
            <em class="parameter"><code>access</code></em> policy.
        </p>
        <p>
            A pointer to the beginning of the mapped range is returned once
            all pending operations on that buffer object have completed, and
            may be used to modify and/or query the corresponding range of
            the data store according to the value of
            <em class="parameter"><code>access</code></em>:

            </p>
        <div class="itemizedlist">
          <ul class="itemizedlist" style="list-style-type: disc; ">
            <li class="listitem">
              <p>
                        <code class="constant">GL_READ_ONLY</code> indicates that
                        the returned pointer may be used to read buffer
                        object data.
                    </p>
            </li>
            <li class="listitem">
              <p>
                        <code class="constant">GL_WRITE_ONLY</code> indicates that
                        the returned pointer may be used to modify buffer
                        object data.
                    </p>
            </li>
            <li class="listitem">
              <p>
                        <code class="constant">GL_READ_WRITE</code> indicates that
                        the returned pointer may be used to read and to
                        modify buffer object data.
                    </p>
            </li>
          </ul>
        </div>
        <p>
        </p>
        <p>
            If an error is generated, a <code class="code">NULL</code> pointer is
            returned.
        </p>
        <p>
            If no error occurs, the returned pointer will reflect an
            allocation aligned to the value of
            <code class="constant">GL_MIN_MAP_BUFFER_ALIGNMENT</code> basic machine
            units.
        </p>
        <p>
            The returned pointer values may not be passed as parameter
            values to GL commands. For example, they may not be used to
            specify array pointers, or to specify or query pixel or texture
            image data; such actions produce undefined results, although
            implementations may not check for such behavior for performance
            reasons.
        </p>
        <p>
            No GL error is generated if the returned pointer is accessed in
            a way inconsistent with <em class="parameter"><code>access</code></em> (e.g. used
            to read from a mapping made with <em class="parameter"><code>access</code></em>
            <code class="constant">GL_WRITE_ONLY</code> or write to a mapping made
            with <em class="parameter"><code>access</code></em>
            <code class="constant">GL_READ_ONLY</code>), but the result is undefined
            and system errors (possibly including program termination) may
            occur.
        </p>
        <p>
            Mappings to the data stores of buffer objects may have
            nonstandard performance characteristics. For example, such
            mappings may be marked as uncacheable regions of memory, and in
            such cases reading from them may be very slow. To ensure optimal
            performance, the client should use the mapping in a fashion
            consistent with the values of
            <code class="constant">GL_BUFFER_USAGE</code> for the buffer object and
            of <em class="parameter"><code>access</code></em>. Using a mapping in a fashion
            inconsistent with these values is liable to be multiple orders
            of magnitude slower than using normal memory.
        </p>
      </div>
      <div class="refsect1" id="notes">
        <h2>Notes</h2>
        <p>
            Alignment of the returned pointer is guaranteed only if the
            version of the GL version is 4.2 or greater. Also, the
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER</code> target is accepted
            only if the GL version is 4.2 or greater.
        </p>
        <p>
            The <code class="constant">GL_DISPATCH_INDIRECT_BUFFER</code> and
            <code class="constant">GL_SHADER_STORAGE_BUFFER</code> targets are
            available only if the GL version is 4.3 or greater.
        </p>
        <p>
            The <code class="constant">GL_QUERY_BUFFER</code> target is available
            only if the GL version is 4.4 or greater.
        </p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p>
            <code class="constant">GL_INVALID_ENUM</code> is generated by
            <code class="function">glMapBuffer</code> if
            <em class="parameter"><code>target</code></em> is not one of the buffer binding
            targets listed above.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated by
            <code class="function">glMapBuffer</code> if zero is bound to
            <em class="parameter"><code>target</code></em>.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated by
            <code class="function">glMapNamedBuffer</code> if
            <em class="parameter"><code>buffer</code></em> is not the name of an existing
            buffer object.
        </p>
        <p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if
            <em class="parameter"><code>access</code></em> is not
            <code class="constant">GL_READ_ONLY</code>,
            <code class="constant">GL_WRITE_ONLY</code>, or
            <code class="constant">GL_READ_WRITE</code>.
        </p>
        <p>
            <code class="constant">GL_OUT_OF_MEMORY</code> is generated if the GL is
            unable to map the buffer object's data store. This may occur for
            a variety of system-specific reasons, such as the absence of
            sufficient remaining virtual memory.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if the
            buffer object is in a mapped state.
        </p>
      </div>
      <div class="refsect1" id="associatedgets">
        <h2>Associated Gets</h2>
        <p>
            <a class="citerefentry" href="glGetBufferPointerv.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetBufferPointerv</span></span></a>
            with argument <code class="constant">GL_BUFFER_MAP_POINTER</code>
        </p>
        <p>
            <a class="citerefentry" href="glGetBufferParameter.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetBufferParameter</span></span></a>
            with argument <code class="constant">GL_BUFFER_MAPPED</code>,
            <code class="constant">GL_BUFFER_ACCESS</code>, or
            <code class="constant">GL_BUFFER_USAGE</code>
        </p>
        <p>
            <a class="citerefentry" href="glGet.xhtml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a>
            with <em class="parameter"><code>pname</code></em>
            <code class="constant">GL_MIN_MAP_BUFFER_ALIGNMENT</code>. The value must
            be a power of two that is at least 64.
        </p>
      </div>
      <div class="refsect1" id="versions">
        <h2>Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="12">
                <span class="bold"><strong>OpenGL Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function / Feature Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.1</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.2</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.3</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.1</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.2</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.3</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.4</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.5</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glMapBuffer</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">
                  <code class="function">glMapNamedBuffer</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
            <a class="citerefentry" href="glBindBuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>,
            <a class="citerefentry" href="glBindBufferBase.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBufferBase</span></span></a>,
            <a class="citerefentry" href="glBindBufferRange.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBufferRange</span></span></a>,
            <a class="citerefentry" href="glBufferData.xhtml"><span class="citerefentry"><span class="refentrytitle">glBufferData</span></span></a>,
            <a class="citerefentry" href="glBufferSubData.xhtml"><span class="citerefentry"><span class="refentrytitle">glBufferSubData</span></span></a>,
            <a class="citerefentry" href="glDeleteBuffers.xhtml"><span class="citerefentry"><span class="refentrytitle">glDeleteBuffers</span></span></a>,
            <a class="citerefentry" href="glMapBufferRange.xhtml"><span class="citerefentry"><span class="refentrytitle">glMapBufferRange</span></span></a>,
            <a class="citerefentry" href="glUnmapBuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glUnmapBuffer</span></span></a>
        </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2005 Addison-Wesley.
            Copyright <span class="trademark"/>© 2010-2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

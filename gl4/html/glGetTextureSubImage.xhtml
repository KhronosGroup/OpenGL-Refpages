<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glGetTextureSubImage - OpenGL 4 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glGetTextureSubImage">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glGetTextureSubImage — retrieve a sub-region of a texture image from a texture
    object</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glGetTextureSubImage</strong>(</code>
              </td>
              <td>GLuint <var class="pdparam">texture</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">level</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">xoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">yoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">zoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">width</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">height</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">depth</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">format</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">type</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">bufSize</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>void *<var class="pdparam">pixels</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>texture</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the name of the source texture object. Must be
          <code class="constant">GL_TEXTURE_1D</code>,
          <code class="constant">GL_TEXTURE_1D_ARRAY</code>,
          <code class="constant">GL_TEXTURE_2D</code>,
          <code class="constant">GL_TEXTURE_2D_ARRAY</code>,
          <code class="constant">GL_TEXTURE_3D</code>,
          <code class="constant">GL_TEXTURE_CUBE_MAP</code>,
          <code class="constant">GL_TEXTURE_CUBE_MAP_ARRAY</code> or
          <code class="constant">GL_TEXTURE_RECTANGLE</code>. In specific, buffer and
          multisample textures are not permitted.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>level</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the level-of-detail number. Level 0 is the base
          image level. Level $n$ is the $n$th mipmap reduction image.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>xoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies a texel offset in the x direction within the texture
          array.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>yoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies a texel offset in the y direction within the texture
          array.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>zoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies a texel offset in the z direction within the texture
          array.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>width</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the width of the texture subimage.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>height</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the height of the texture subimage.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>depth</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the depth of the texture subimage.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>format</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the format of the pixel data. The following symbolic
          values are accepted: <code class="constant">GL_RED</code>,
          <code class="constant">GL_RG</code>, <code class="constant">GL_RGB</code>,
          <code class="constant">GL_BGR</code>, <code class="constant">GL_RGBA</code>,
          <code class="constant">GL_BGRA</code>,
          <code class="constant">GL_DEPTH_COMPONENT</code> and
          <code class="constant">GL_STENCIL_INDEX</code>.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>type</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the data type of the pixel data. The following
          symbolic values are accepted: <code class="constant">GL_UNSIGNED_BYTE</code>,
          <code class="constant">GL_BYTE</code>,
          <code class="constant">GL_UNSIGNED_SHORT</code>,
          <code class="constant">GL_SHORT</code>, <code class="constant">GL_UNSIGNED_INT</code>,
          <code class="constant">GL_INT</code>, <code class="constant">GL_FLOAT</code>,
          <code class="constant">GL_UNSIGNED_BYTE_3_3_2</code>,
          <code class="constant">GL_UNSIGNED_BYTE_2_3_3_REV</code>,
          <code class="constant">GL_UNSIGNED_SHORT_5_6_5</code>,
          <code class="constant">GL_UNSIGNED_SHORT_5_6_5_REV</code>,
          <code class="constant">GL_UNSIGNED_SHORT_4_4_4_4</code>,
          <code class="constant">GL_UNSIGNED_SHORT_4_4_4_4_REV</code>,
          <code class="constant">GL_UNSIGNED_SHORT_5_5_5_1</code>,
          <code class="constant">GL_UNSIGNED_SHORT_1_5_5_5_REV</code>,
          <code class="constant">GL_UNSIGNED_INT_8_8_8_8</code>,
          <code class="constant">GL_UNSIGNED_INT_8_8_8_8_REV</code>,
          <code class="constant">GL_UNSIGNED_INT_10_10_10_2</code>, and
          <code class="constant">GL_UNSIGNED_INT_2_10_10_10_REV</code>.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>bufSize</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the size of the buffer to receive the retrieved
          pixel data.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>pixels</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Returns the texture subimage. Should be a pointer to an array
          of the type specified by <em class="parameter"><code>type</code></em>.</p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p><code class="function">glGetTextureSubImage</code> returns a texture subimage
    into pixels.</p>
        <p><em class="parameter"><code>texture</code></em> is the name of the source texture
    object and must not be a buffer or multisample texture. The effective
    <em class="parameter"><code>target</code></em> parameter is the value of
    <code class="constant">GL_TEXTURE_TARGET</code> for texture.
    <em class="parameter"><code>Level</code></em>, <em class="parameter"><code>format</code></em>,
    <em class="parameter"><code>type</code></em> and <em class="parameter"><code>pixels</code></em> have the
    same meaning as for <code class="function">glGetTexImage</code>.
    <em class="parameter"><code>bufSize</code></em> is the size of the buffer to receive the
    retrieved pixel data.</p>
        <p>For cube map textures, the behavior is as though
    <code class="function">GetTextureImage</code> were called, but only texels from the
    requested cube map faces (selected by <em class="parameter"><code>zoffset</code></em> and
    <em class="parameter"><code>depth</code></em>, as described below) were returned.</p>
        <p><em class="parameter"><code>xoffset</code></em>, <em class="parameter"><code>yoffset</code></em> and
    <em class="parameter"><code>zoffset</code></em> values indicate the position of the
    subregion to return. <em class="parameter"><code>width</code></em>,
    <em class="parameter"><code>height</code></em> and <em class="parameter"><code>depth</code></em> indicate
    the size of the region to return. These parameters have the same meaning
    as for <code class="function">glTexSubImage3D</code>, though for one- and
    two-dimensional textures there are extra restrictions, described in the
    errors section below.</p>
        <p>For one-dimensional array textures, <em class="parameter"><code>yoffset</code></em>
    is interpreted as the first layer to access and
    <em class="parameter"><code>height</code></em> is the number of layers to access.</p>
        <p>For two-dimensional array textures, <em class="parameter"><code>zoffset</code></em>
    is interpreted as the first layer to access and
    <em class="parameter"><code>depth</code></em> is the number of layers to access.</p>
        <p>Cube map textures are treated as an array of six slices in the
    z-dimension, where the value of <em class="parameter"><code>zoffset</code></em> is
    interpreted as specifying the cube map face for the corresponding layer
    (as presented in the table below) and <em class="parameter"><code>depth</code></em> is the
    number of faces to access:</p>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col/>
              <col/>
            </colgroup>
            <tbody>
              <tr>
                <td style="border-right: 2px solid ; border-bottom: 2px solid ; ">Layer number</td>
                <td style="border-bottom: 2px solid ; ">Cube Map Face</td>
              </tr>
              <tr>
                <td style="border-right: 2px solid ; border-bottom: 2px solid ; ">0</td>
                <td style="border-bottom: 2px solid ; ">GL_TEXTURE_CUBE_MAP_POSITIVE_X</td>
              </tr>
              <tr>
                <td style="border-right: 2px solid ; border-bottom: 2px solid ; ">1</td>
                <td style="border-bottom: 2px solid ; ">GL_TEXTURE_CUBE_MAP_NEGATIVE_X</td>
              </tr>
              <tr>
                <td style="border-right: 2px solid ; border-bottom: 2px solid ; ">2</td>
                <td style="border-bottom: 2px solid ; ">GL_TEXTURE_CUBE_MAP_POSITIVE_Y</td>
              </tr>
              <tr>
                <td style="border-right: 2px solid ; border-bottom: 2px solid ; ">3</td>
                <td style="border-bottom: 2px solid ; ">GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</td>
              </tr>
              <tr>
                <td style="border-right: 2px solid ; border-bottom: 2px solid ; ">4</td>
                <td style="border-bottom: 2px solid ; ">GL_TEXTURE_CUBE_MAP_POSITIVE_Z</td>
              </tr>
              <tr>
                <td style="border-right: 2px solid ; ">5</td>
                <td>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</td>
              </tr>
            </tbody>
          </table>
        </div>
        <p>
        For cube map array textures, <em class="parameter"><code>zoffset</code></em> is the
        first layer-face to access, and <em class="parameter"><code>depth</code></em> is the
        number of layer-faces to access. A layer-face described by $k$ is
        translated into an array layer and face according to
            $$ layer = \left\lfloor { layer \over 6 } \right\rfloor$$
        and
            $$ face = k \bmod 6. $$
    </p>
        <p>Component groups from the specified sub-region are packed and placed
    into memory as described for <code class="function">glGetTextureImage</code>,
    starting with the texel at (<em class="parameter"><code>xoffset</code></em>,
    <em class="parameter"><code>yoffset</code></em>, <em class="parameter"><code>zoffset</code></em>).</p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p><code class="constant">GL_INVALID_VALUE</code> error is generated if
    <em class="parameter"><code>texture</code></em> is not the name of an existing texture
    object.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> error is generated if
    <em class="parameter"><code>texture</code></em> is the name of a buffer or multisample
    texture.</p>
        <p><code class="constant">GL_INVALID_VALUE</code> is generated if
    <em class="parameter"><code>xoffset</code></em>, <em class="parameter"><code>yoffset</code></em> or
    <em class="parameter"><code>zoffset</code></em> are negative.</p>
        <p><code class="constant">GL_INVALID_VALUE</code> is generated if
    <em class="parameter"><code>xoffset</code></em> + <em class="parameter"><code>width</code></em> is greater
    than the texture's width, <em class="parameter"><code>yoffset</code></em> +
    <em class="parameter"><code>height</code></em> is greater than the texture's height, or
    <em class="parameter"><code>zoffset</code></em> + <em class="parameter"><code>depth</code></em> is greater
    than the texture's depth.</p>
        <p><code class="constant">GL_INVALID_VALUE</code> error is generated if the
    effective target is <code class="constant">GL_TEXTURE_1D</code> and either
    <em class="parameter"><code>yoffset</code></em> is not zero, or
    <em class="parameter"><code>height</code></em> is not one.</p>
        <p><code class="constant">GL_INVALID_VALUE</code> error is generated if the
    effective target is <code class="constant">GL_TEXTURE_1D</code>,
    <code class="constant">GL_TEXTURE_1D_ARRAY</code>,
    <code class="constant">GL_TEXTURE_2D</code> or
    <code class="constant">GL_TEXTURE_RECTANGLE</code> and either
    <em class="parameter"><code>zoffset</code></em> is not zero, or
    <em class="parameter"><code>depth</code></em> is not one.</p>
        <p><code class="constant">GL_INVALID_OPERATION</code> error is generated if the
    buffer size required to store the requested data is greater than
    <em class="parameter"><code>bufSize</code></em>.</p>
      </div>
      <div class="refsect1" id="versions">
        <h2>Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="13">
                <span class="bold"><strong>OpenGL Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function / Feature Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.1</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.2</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.3</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.1</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.2</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.3</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.4</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.5</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>4.6</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">
                  <code class="function">glGetTextureSubImage</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
        <a class="citerefentry" href="glGetTexImage.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetTexImage</span></span></a>,
         <code class="function">glGetTextureImage</code>,
        <a class="citerefentry" href="glReadPixels.xhtml"><span class="citerefentry"><span class="refentrytitle">glReadPixels</span></span></a>,
        <a class="citerefentry" href="glTexImage1D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexImage1D</span></span></a>,
        <a class="citerefentry" href="glTexImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span></a>,
        <a class="citerefentry" href="glTexImage3D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span></a>,
        <a class="citerefentry" href="glTexSubImage1D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexSubImage1D</span></span></a>,
        <a class="citerefentry" href="glTexSubImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexSubImage2D</span></span></a>,
        <a class="citerefentry" href="glTexSubImage3D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexSubImage3D</span></span></a>
    </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2014 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

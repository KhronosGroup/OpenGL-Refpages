<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glVertexAttribPointer - OpenGL ES 3.2 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glVertexAttribPointer">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glVertexAttribPointer — define an array of generic vertex attribute data</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glVertexAttribPointer</strong>(</code>
              </td>
              <td>GLuint <var class="pdparam">index</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">size</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">type</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLboolean <var class="pdparam">normalized</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">stride</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const void * <var class="pdparam">pointer</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glVertexAttribIPointer</strong>(</code>
              </td>
              <td>GLuint <var class="pdparam">index</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">size</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">type</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">stride</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const void * <var class="pdparam">pointer</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>index</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the index of the generic vertex
            attribute to be modified.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>size</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the number of components per
            generic vertex attribute. Must
            be 1, 2, 3, 4. The initial value is 4.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>type</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>Specifies the data type of each component in
            the array. The symbolic constants
            <code class="constant">GL_BYTE</code>,
            <code class="constant">GL_UNSIGNED_BYTE</code>,
            <code class="constant">GL_SHORT</code>,
            <code class="constant">GL_UNSIGNED_SHORT</code>,
            <code class="constant">GL_INT</code>, and
            <code class="constant">GL_UNSIGNED_INT</code> are accepted by both functions. Additionally
            <code class="constant">GL_HALF_FLOAT</code>,
            <code class="constant">GL_FLOAT</code>,
            <code class="constant">GL_FIXED</code>,
            <code class="constant">GL_INT_2_10_10_10_REV</code>, and
            <code class="constant">GL_UNSIGNED_INT_2_10_10_10_REV</code> are accepted by <code class="function">glVertexAttribPointer</code>.
            The initial value is <code class="constant">GL_FLOAT</code>.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>normalized</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>For <code class="function">glVertexAttribPointer</code>, specifies whether fixed-point data values
            should be normalized (<code class="constant">GL_TRUE</code>)
            or converted directly as fixed-point values
            (<code class="constant">GL_FALSE</code>) when they are
            accessed. This parameter is ignored if <em class="parameter"><code>type</code></em> is <code class="constant">GL_FIXED</code>.</p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>stride</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                Specifies the byte offset between consecutive generic vertex
                attributes. If <em class="parameter"><code>stride</code></em> is 0, the
                generic vertex attributes are understood to be tightly
                packed in the array. The initial value is 0.
            </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>pointer</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                Specifies a pointer to the first generic vertex attribute in
                the array. If a non-zero buffer is currently bound to the
                <code class="constant">GL_ARRAY_BUFFER</code> target,
                <em class="parameter"><code>pointer</code></em> specifies an offset of into
                the array in the data store of that buffer. The initial
                value is 0.
            </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p>
            <code class="function">glVertexAttribPointer</code> and <code class="function">glVertexAttribIPointer</code> specify the
            location and data format of the array of generic vertex attributes at index <em class="parameter"><code>index</code></em>
            to use when rendering. <em class="parameter"><code>size</code></em> specifies the number of components per attribute and
            must be 1, 2, 3 or 4. <em class="parameter"><code>type</code></em> specifies the data type
            of each component, and <em class="parameter"><code>stride</code></em> specifies the byte stride from one attribute to the next,
            allowing vertices and attributes to be packed into a single array or stored in separate arrays.
        </p>
        <p>
            For <code class="function">glVertexAttribPointer</code>, if <em class="parameter"><code>normalized</code></em> is set to <code class="constant">GL_TRUE</code>,
            it indicates that values stored in an integer format are to be mapped to the range [-1,1] (for signed values) or [0,1] (for
            unsigned values) when they are accessed and converted to floating point. Otherwise, values will
            be converted to floats directly without normalization.
        </p>
        <p>
            For <code class="function">glVertexAttribIPointer</code>, only the integer types <code class="constant">GL_BYTE</code>,
            <code class="constant">GL_UNSIGNED_BYTE</code>, <code class="constant">GL_SHORT</code>, <code class="constant">GL_UNSIGNED_SHORT</code>,
            <code class="constant">GL_INT</code>, <code class="constant">GL_UNSIGNED_INT</code> are accepted. Values are always left as integer values.
        </p>
        <p>
            If a non-zero named buffer object is bound to the <code class="constant">GL_ARRAY_BUFFER</code> target 
            (see <a class="citerefentry" href="glBindBuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>),
            <em class="parameter"><code>pointer</code></em> is treated as a byte offset into the buffer object's data store and
            the buffer object binding (<code class="constant">GL_ARRAY_BUFFER_BINDING</code>) is saved as generic vertex attribute array
            state (<code class="constant">GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</code>) for index <em class="parameter"><code>index</code></em>.
        </p>
        <p>
            Client vertex arrays (a binding of zero to the <code class="constant">GL_ARRAY_BUFFER</code> target) are only valid in
            conjunction with the zero named vertex array object. This is provided for backwards compatibility with OpenGL ES 2.0. 
        </p>
        <p>
            When a generic vertex attribute array is specified,
            <em class="parameter"><code>size</code></em>, <em class="parameter"><code>type</code></em>,
            <em class="parameter"><code>normalized</code></em>,
            <em class="parameter"><code>stride</code></em>, and
            <em class="parameter"><code>pointer</code></em> are saved as vertex array
            state, in addition to the current vertex array buffer object binding.
        </p>
        <p>
            To enable and disable a generic vertex attribute array, call
            <a class="citerefentry" href="glEnableVertexAttribArray.xhtml"><span class="citerefentry"><span class="refentrytitle">glEnableVertexAttribArray</span></span></a> and
            <a class="citerefentry" href="glDisableVertexAttribArray.xhtml"><span class="citerefentry"><span class="refentrytitle">glDisableVertexAttribArray</span></span></a> with <em class="parameter"><code>index</code></em>.
            If enabled, the generic vertex attribute array is used when <a class="citerefentry" href="glDrawArrays.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
            <a class="citerefentry" href="glDrawArraysInstanced.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawArraysInstanced</span></span></a>, <a class="citerefentry" href="glDrawElements.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
            <a class="citerefentry" href="glDrawElementsIntanced.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawElementsIntanced</span></span></a>, or  <a class="citerefentry" href="glDrawRangeElements.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawRangeElements</span></span></a>
            is called.
        </p>
      </div>
      <div class="refsect1" id="notes">
        <h2>Notes</h2>
        <p>
            Each generic vertex attribute array is initially disabled and isn't accessed when
            <a class="citerefentry" href="glDrawElements.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>, <a class="citerefentry" href="glDrawRangeElements.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawRangeElements</span></span></a>,
            <a class="citerefentry" href="glDrawArrays.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>, <a class="citerefentry" href="glDrawArraysInstanced.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawArraysInstanced</span></span></a>, or <a class="citerefentry" href="glDrawElementsInstanced.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawElementsInstanced</span></span></a>
            is called.
        </p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if
            <em class="parameter"><code>index</code></em> is greater than or equal to
            <code class="constant">GL_MAX_VERTEX_ATTRIBS</code>.
        </p>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if
            <em class="parameter"><code>size</code></em> is not 1, 2, 3 or 4.
        </p>
        <p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if
            <em class="parameter"><code>type</code></em> is not an accepted value.
        </p>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if
            <em class="parameter"><code>stride</code></em> is negative.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if
            <em class="parameter"><code>type</code></em> is
            <code class="constant">GL_INT_2_10_10_10_REV</code> or
            <code class="constant">GL_UNSIGNED_INT_2_10_10_10_REV</code> and
            <em class="parameter"><code>size</code></em> is not 4.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated a
            non-zero vertex array object is bound, zero is bound to the
            <code class="constant">GL_ARRAY_BUFFER</code> buffer object binding point
            and the <em class="parameter"><code>pointer</code></em> argument is not
            <code class="constant">NULL</code>.
        </p>
      </div>
      <div class="refsect1" id="associatedgets">
        <h2>Associated Gets</h2>
        <p><a class="citerefentry" href="glGet.xhtml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a>
        with argument <code class="constant">GL_MAX_VERTEX_ATTRIBS</code></p>
        <p><a class="citerefentry" href="glGetVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttrib</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and <code class="constant">GL_VERTEX_ATTRIB_ARRAY_ENABLED</code></p>
        <p><a class="citerefentry" href="glGetVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttrib</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and <code class="constant">GL_VERTEX_ATTRIB_ARRAY_SIZE</code></p>
        <p><a class="citerefentry" href="glGetVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttrib</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and <code class="constant">GL_VERTEX_ATTRIB_ARRAY_TYPE</code></p>
        <p><a class="citerefentry" href="glGetVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttrib</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and <code class="constant">GL_VERTEX_ATTRIB_ARRAY_NORMALIZED</code></p>
        <p><a class="citerefentry" href="glGetVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttrib</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and <code class="constant">GL_VERTEX_ATTRIB_ARRAY_STRIDE</code></p>
        <p><a class="citerefentry" href="glGetVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttrib</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and <code class="constant">GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</code></p>
        <p><a class="citerefentry" href="glGet.xhtml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument 
        <code class="constant">GL_ARRAY_BUFFER_BINDING</code></p>
        <p><a class="citerefentry" href="glGetVertexAttribPointerv.xhtml"><span class="citerefentry"><span class="refentrytitle">glGetVertexAttribPointerv</span></span></a>
        with arguments <em class="parameter"><code>index</code></em> and
        <code class="constant">GL_VERTEX_ATTRIB_ARRAY_POINTER</code></p>
      </div>
      <div class="refsect1" id="versions">
        <h2>API Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="4">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.2</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                  <code class="function">glVertexAttribPointer</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">✔</td>
                <td style="text-align: center; border-bottom: 2px solid ; ">✔</td>
              </tr>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">
                  <code class="function">glVertexAttribIPointer</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
            <a class="citerefentry" href="glBindAttribLocation.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindAttribLocation</span></span></a>,
            <a class="citerefentry" href="glBindBuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>,
            <a class="citerefentry" href="glDisableVertexAttribArray.xhtml"><span class="citerefentry"><span class="refentrytitle">glDisableVertexAttribArray</span></span></a>,
            <a class="citerefentry" href="glDrawArrays.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawArrays</span></span></a>,
            <a class="citerefentry" href="glDrawElements.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawElements</span></span></a>,
            <a class="citerefentry" href="glDrawRangeElements.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawRangeElements</span></span></a>,
            <a class="citerefentry" href="glEnableVertexAttribArray.xhtml"><span class="citerefentry"><span class="refentrytitle">glEnableVertexAttribArray</span></span></a>,
            <a class="citerefentry" href="glDrawArraysInstanced.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawArraysInstanced</span></span></a>,
            <a class="citerefentry" href="glDrawElementsIntanced.xhtml"><span class="citerefentry"><span class="refentrytitle">glDrawElementsIntanced</span></span></a>,
            <a class="citerefentry" href="glVertexAttrib.xhtml"><span class="citerefentry"><span class="refentrytitle">glVertexAttrib</span></span></a>
        </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2003-2005 3Dlabs Inc. Ltd.
            Copyright <span class="trademark"/>© 2010-2015 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glFramebufferTexture - OpenGL ES 3.2 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glFramebufferTexture">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glFramebufferTexture — attach a level of a texture object as a logical buffer of a framebuffer object</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glFramebufferTexture</strong>(</code>
              </td>
              <td>GLenum <var class="pdparam">target</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">attachment</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLuint <var class="pdparam">texture</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">level</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>target</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the target to which the framebuffer is bound.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>attachment</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the attachment point of the framebuffer.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>texture</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the name of an existing texture object to
                    attach.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>level</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the mipmap level of the texture object to
                    attach. 
                </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p>
            <code class="function">glFramebufferTexture</code> attaches a selected mipmap level or image of a
            texture object as one of the logical buffers of the framebuffer object
            bound to the specified target. Textures cannot be attached to the default
            draw and read framebuffer, so they are not valid targets of
            these commands.
        </p>
        <p>
            The framebuffer
            object is that bound to <em class="parameter"><code>target</code></em>, which
            must be <code class="constant">GL_DRAW_FRAMEBUFFER</code>,
            <code class="constant">GL_READ_FRAMEBUFFER</code>, or
            <code class="constant">GL_FRAMEBUFFER</code>.
            <code class="constant">GL_FRAMEBUFFER</code> is equivalent to
            <code class="constant">GL_DRAW_FRAMEBUFFER</code>.
        </p>
        <p>
            <em class="parameter"><code>attachment</code></em> specifies the logical
            attachment of the framebuffer and must be
            <code class="constant">GL_COLOR_ATTACHMENT</code><span class="emphasis"><em>i</em></span>,
            <code class="constant">GL_DEPTH_ATTACHMENT</code>,
            <code class="constant">GL_STENCIL_ATTACHMENT</code> or
            <code class="constant">GL_DEPTH_STENCIL_ATTACHMENT</code>.
            <span class="emphasis"><em>i</em></span> in
            <code class="constant">GL_COLOR_ATTACHMENT</code><span class="emphasis"><em>i</em></span>
            may range from zero to the value of
            <code class="constant">GL_MAX_COLOR_ATTACHMENTS</code> minus one.
            Attaching a level of a texture to
            <code class="constant">GL_DEPTH_STENCIL_ATTACHMENT</code> is equivalent
            to attaching that level to both the
            <code class="constant">GL_DEPTH_ATTACHMENT</code>
            <span class="emphasis"><em>and</em></span> the
            <code class="constant">GL_STENCIL_ATTACHMENT</code> attachment points
            simultaneously.
        </p>
        <p>
            If <em class="parameter"><code>texture</code></em> is non-zero, the specified
            <em class="parameter"><code>level</code></em> of the texture object named
            <em class="parameter"><code>texture</code></em> is attached to the framebuffer
            attachment point named by <em class="parameter"><code>attachment</code></em>.
        </p>
        <p>
            If <em class="parameter"><code>texture</code></em> is a multisampled texture, then
            <em class="parameter"><code>level</code></em> must be zero.
        </p>
        <p>
            If <em class="parameter"><code>texture</code></em> is a 3D texture, then
            <em class="parameter"><code>level</code></em> must be greater than or equal to
            zero and less than or equal to $log_2$ of the value of
            <code class="constant">GL_MAX_3D_TEXTURE_SIZE</code>. 
        </p>
        <p>
            If <em class="parameter"><code>texture</code></em> is a cube-mapped texture, then
            <em class="parameter"><code>level</code></em> must be greater than or equal to
            zero and less than or equal to $log_2$ of the value of
            <code class="constant">GL_MAX_CUBE_MAP_TEXTURE_SIZE</code>. 
        </p>
        <p>
            For all other texture types,
            <em class="parameter"><code>level</code></em> must be greater than or equal to
            zero and less than or equal to $log_2$ of the value of
            <code class="constant">GL_MAX_TEXTURE_SIZE</code>.
        </p>
        <p>
            If
            <em class="parameter"><code>texture</code></em> is the name of a
            three-dimensional, cube map array, cube map, 
            two-dimensional array, or two-dimensional multisample array
            texture, the specified texture level is an array of images, and
            the framebuffer attachment is considered to be
            <span class="emphasis"><em>layered</em></span> and 
            <code class="constant">GL_FRAMEBUFFER_ATTACHMENT_LAYERED</code> is set to true.
        </p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if 
            <em class="parameter"><code>target</code></em> if
            it is not <code class="constant">GL_DRAW_FRAMEBUFFER</code>,
            <code class="constant">GL_READ_FRAMEBUFFER</code>, or
            <code class="constant">GL_FRAMEBUFFER</code>
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if zero
            is bound to <em class="parameter"><code>target</code></em>.
        </p>
        <p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if
            <em class="parameter"><code>attachment</code></em> is not one of the accepted
            attachment points.
        </p>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if
            <em class="parameter"><code>texture</code></em> is not zero or the name of an
            existing texture object.
        </p>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if
            <em class="parameter"><code>texture</code></em> is not zero and
            <em class="parameter"><code>level</code></em> is not a supported texture level
            for <em class="parameter"><code>texture</code></em>.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated by 
            if <em class="parameter"><code>texture</code></em> is a buffer texture.
        </p>
      </div>
      <div class="refsect1" id="versions">
        <h2>Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="4">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.2</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">
                  <code class="function">glFramebufferTexture</code>
                </td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
            <a class="citerefentry" href="glGenFramebuffers.xhtml"><span class="citerefentry"><span class="refentrytitle">glGenFramebuffers</span></span></a>,
            <a class="citerefentry" href="glBindFramebuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindFramebuffer</span></span></a>,
            <a class="citerefentry" href="glGenRenderbuffers.xhtml"><span class="citerefentry"><span class="refentrytitle">glGenRenderbuffers</span></span></a>,
            <a class="citerefentry" href="glFramebufferTextureLayer.xhtml"><span class="citerefentry"><span class="refentrytitle">glFramebufferTextureLayer</span></span></a>,
            <a class="citerefentry" href="glFramebufferTexture2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glFramebufferTexture2D</span></span></a>
        </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 2010-2015 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="link" href="https://opencontent.org/openpub/" target="_top">https://opencontent.org/openpub/</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>glCompressedTexSubImage3D - OpenGL ES 3.2 Reference Pages</title>
    <link rel="stylesheet" type="text/css" href="opengl-man.css"/>
    <meta name="generator" content="DocBook XSL Stylesheets V1.79.2"/>
    <script type="text/x-mathjax-config">
            MathJax.Hub.Config({
                MathML: {
                    extensions: ["content-mathml.js"]
                },
                tex2jax: {
                    inlineMath: [['$','$'], ['\\(','\\)']]
                }
            });
        </script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"/>
  </head>
  <body>
    <header/>
    <div class="refentry" id="glCompressedTexSubImage3D">
      <div class="titlepage"/>
      <div class="refnamediv">
        <h2>Name</h2>
        <p>glCompressedTexSubImage3D — specify a three-dimensional texture subimage in a compressed format</p>
      </div>
      <div class="refsynopsisdiv">
        <h2>C Specification</h2>
        <div class="funcsynopsis">
          <table style="border: 0; cellspacing: 0; cellpadding: 0;" class="funcprototype-table">
            <tr>
              <td>
                <code class="funcdef">void <strong class="fsfunc">glCompressedTexSubImage3D</strong>(</code>
              </td>
              <td>GLenum <var class="pdparam">target</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">level</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">xoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">yoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLint <var class="pdparam">zoffset</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">width</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">height</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">depth</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLenum <var class="pdparam">format</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>GLsizei <var class="pdparam">imageSize</var>, </td>
            </tr>
            <tr>
              <td> </td>
              <td>const void * <var class="pdparam">data</var><code>)</code>;</td>
            </tr>
          </table>
          <div class="funcprototype-spacer"> </div>
        </div>
      </div>
      <div class="refsect1" id="parameters">
        <h2>Parameters</h2>
        <div class="variablelist">
          <dl class="variablelist">
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>target</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the target texture.
                    Must be <code class="constant">GL_TEXTURE_3D</code>, <code class="constant">GL_TEXTURE_2D_ARRAY</code>, 
                    or <code class="constant">GL_TEXTURE_CUBE_MAP_ARRAY</code>.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>level</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the level-of-detail number.
                    Level 0 is the base image level.
                    Level <span class="emphasis"><em>n</em></span> is the <span class="emphasis"><em>n</em></span>th mipmap reduction image.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>xoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies a texel offset in the x direction within the texture array.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>yoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies a texel offset in the y direction within the texture array.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>zoffset</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies a texel offset in the z direction within the texture array.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>width</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the width of the texture subimage.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>height</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the height of the texture subimage.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>depth</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the depth of the texture subimage.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>format</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the format of the compressed image data stored at address <em class="parameter"><code>data</code></em>.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>imageSize</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies the number of unsigned bytes of image data starting at the
                    address specified by <em class="parameter"><code>data</code></em>.
                </p>
            </dd>
            <dt>
              <span class="term">
                <em class="parameter">
                  <code>data</code>
                </em>
              </span>
            </dt>
            <dd>
              <p>
                    Specifies a pointer to the compressed image data in memory.
                </p>
            </dd>
          </dl>
        </div>
      </div>
      <div class="refsect1" id="description">
        <h2>Description</h2>
        <p>
            Texturing allows elements of an image array to be read by shaders.
        </p>
        <p>
            <code class="function">glCompressedTexSubImage3D</code> redefines a contiguous subregion of an existing three-dimensional, 
            two-dimensional array, or cube map array texture image.  The texels referenced by <em class="parameter"><code>data</code></em> replace the portion of the
            existing texture array with x indices <em class="parameter"><code>xoffset</code></em> and
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mrow>
                    <mml:mi mathvariant="italic">xoffset</mml:mi>
                    <mml:mo>+</mml:mo>
                    <mml:mi mathvariant="italic">width</mml:mi>
                    <mml:mo>-</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math>,
            and the y indices <em class="parameter"><code>yoffset</code></em> and
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mrow>
                    <mml:mi mathvariant="italic">yoffset</mml:mi>
                    <mml:mo>+</mml:mo>
                    <mml:mi mathvariant="italic">height</mml:mi>
                    <mml:mo>-</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math>,
            and the z indices <em class="parameter"><code>zoffset</code></em> and
            <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                
                <mml:mrow>
                    <mml:mi mathvariant="italic">zoffset</mml:mi>
                    <mml:mo>+</mml:mo>
                    <mml:mi mathvariant="italic">depth</mml:mi>
                    <mml:mo>-</mml:mo>
                    <mml:mn>1</mml:mn>
                </mml:mrow>
            </mml:math>,
            inclusive.  For cube map array textures, <em class="parameter"><code>zoffset</code></em> is the first
            layer-face to update, and <em class="parameter"><code>depth</code></em> is the number of layer-faces to
            update. This region may not include
            any texels outside the range of the texture array as it was originally
            specified.  It is not an error to specify a subtexture with width of 0,
            but such a specification has no effect.
        </p>
        <p>
            <em class="parameter"><code>format</code></em> must be a known compressed image format from Table 1 below,
            or an extension-specified compressed-texture format.
        </p>
        <p>
            If a non-zero named buffer object is bound to the <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target
            (see <a class="citerefentry" href="glBindBuffer.xhtml"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>) while a texture image is
            specified, <em class="parameter"><code>data</code></em> is treated as a byte offset into the buffer object's data store.
        </p>
        <p>
            </p>
        <div class="table" id="id-1.6.6.1">
          <div class="table-title">Table 1. Compressed Internal Formats</div>
          <div class="table-contents">
            <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
              <colgroup>
                <col style="text-align: left; "/>
                <col style="text-align: left; "/>
                <col style="text-align: left; "/>
              </colgroup>
              <thead>
                <tr>
                  <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Compressed Internal Format</strong></span>
            </th>
                  <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Base Internal Format</strong></span>
            </th>
                  <th style="text-align: left; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Image Size</strong></span>
            </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_R11_EAC</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RED</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 8</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SIGNED_R11_EAC</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RED</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 8</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RG11_EAC</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RG</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SIGNED_RG11_EAC</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RG</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGB8_ETC2</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGB</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 8</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ETC2</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGB</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 8</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 8</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 8</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA8_ETC2_EAC</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_4x4</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_5x4</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/5) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_5x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/5) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_6x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/6) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_6x6</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/6) * ceil(<em class="parameter"><code>height</code></em>/6) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_8x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/8) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_8x6</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/8) * ceil(<em class="parameter"><code>height</code></em>/6) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_8x8</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/8) * ceil(<em class="parameter"><code>height</code></em>/8) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_10x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_10x6</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/6) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_10x8</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/8) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_10x10</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/10) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_12x10</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/12) * ceil(<em class="parameter"><code>height</code></em>/10) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_RGBA_ASTC_12x12</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/12) * ceil(<em class="parameter"><code>height</code></em>/12) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/4) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/5) * ceil(<em class="parameter"><code>height</code></em>/4) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/5) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/6) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/6) * ceil(<em class="parameter"><code>height</code></em>/6) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/8) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/8) * ceil(<em class="parameter"><code>height</code></em>/6) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/8) * ceil(<em class="parameter"><code>height</code></em>/8) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/5) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/6) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/8) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/10) * ceil(<em class="parameter"><code>height</code></em>/10) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; border-bottom: 2px solid ; ">ceil(<em class="parameter"><code>width</code></em>/12) * ceil(<em class="parameter"><code>height</code></em>/10) * 16</td>
                </tr>
                <tr>
                  <td style="text-align: left; border-right: 2px solid ; ">
                    <code class="constant">GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12</code>
                  </td>
                  <td style="text-align: left; border-right: 2px solid ; ">
                    <code class="constant">GL_RGBA</code>
                  </td>
                  <td style="text-align: left; ">ceil(<em class="parameter"><code>width</code></em>/12) * ceil(<em class="parameter"><code>height</code></em>/12) * 16</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        <p><br class="table-break"/>
        </p>
      </div>
      <div class="refsect1" id="errors">
        <h2>Errors</h2>
        <p>
          <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>format</code></em> is not one of the specific
          compressed internal formats listed in Table 1 above.
        </p>
        <p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>imageSize</code></em> is not consistent with
            the format, dimensions, and contents of the specified compressed image
            data.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if parameter combinations are not
            supported by the specific compressed internal format as specified in the
            specific texture compression extension.     For ETC2/EAC images <code class="constant">GL_INVALID_OPERATION</code>
                        is generated if <em class="parameter"><code>width</code></em>
                        is not a multiple of four, and <em class="parameter"><code>width</code></em> + <em class="parameter"><code>xoffset</code></em> is not equal
                        to the width of the texture level; if <em class="parameter"><code>height</code></em> is not a multiple of four,
                        and <em class="parameter"><code>height</code></em> + <em class="parameter"><code>yoffset</code></em> is not equal to the height of the texture level;
                        or if <em class="parameter"><code>xoffset</code></em> or <em class="parameter"><code>yoffset</code></em> is not a multiple of four. The ETC2/EAC
                        texture compression algorithm supports only two-dimensional images. If format is an ETC2/EAC format,
                        <code class="function">glCompressedTexSubImage3D</code> will generate an <code class="constant">GL_INVALID_OPERATION</code> error
                        if target is not <code class="constant">GL_TEXTURE_2D_ARRAY</code> or <code class="constant">GL_TEXTURE_CUBE_MAP_ARRAY</code>.
        </p>
        <p>
                        For ASTC images <code class="constant">GL_INVALID_OPERATION</code> is generated if <em class="parameter"><code>width</code></em>
                        is not a multiple of the block width, and <em class="parameter"><code>width</code></em> + <em class="parameter"><code>xoffset</code></em> is not equal
                        to the width of the texture level; if <em class="parameter"><code>height</code></em> is not a multiple of the block height,
                        and <em class="parameter"><code>height</code></em> + <em class="parameter"><code>yoffset</code></em> is not equal to the height of the texture level;
                        or if <em class="parameter"><code>xoffset</code></em> or <em class="parameter"><code>yoffset</code></em> is not a multiple of the corresponding block dimension.
						If format is an ASTC format, <code class="function">glCompressedTexSubImage3D</code> will generate an <code class="constant">GL_INVALID_OPERATION</code> error
                        if target is not <code class="constant">GL_TEXTURE_2D_ARRAY</code> or <code class="constant">GL_TEXTURE_CUBE_MAP_ARRAY</code>, 
                        unless <code class="constant">GL_OES_texture_compression_astc</code> is supported.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and the buffer object's data store is currently mapped.
        </p>
        <p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if a non-zero buffer object name is bound to the
            <code class="constant">GL_PIXEL_UNPACK_BUFFER</code> target and the data would be unpacked from the buffer
            object such that the memory reads required would exceed the data store size.
        </p>
        <p>
            Undefined results, including abnormal program termination, are generated if
            <em class="parameter"><code>data</code></em> is not encoded in a manner consistent with the extension
            specification defining the internal compression format.
        </p>
      </div>
      <div class="refsect1" id="associatedgets">
        <h2>Associated Gets</h2>
        <p>
            <a class="citerefentry" href="glGet.xhtml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_PIXEL_UNPACK_BUFFER_BINDING</code>
        </p>
      </div>
      <div class="refsect1" id="versions">
        <h2>API Version Support</h2>
        <div class="informaltable">
          <table style="border-collapse: collapse; border-top: 2px solid ; border-bottom: 2px solid ; border-left: 2px solid ; border-right: 2px solid ; ">
            <colgroup>
              <col style="text-align: left; "/>
              <col style="text-align: center; " class="firstvers"/>
              <col style="text-align: center; "/>
              <col style="text-align: center; "/>
              <col style="text-align: center; " class="lastvers"/>
            </colgroup>
            <thead>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; ">
                 
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; " colspan="4">
                <span class="bold"><strong>OpenGL ES API Version</strong></span>
            </th>
              </tr>
              <tr>
                <th style="text-align: left; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>Function Name</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>2.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.0</strong></span>
            </th>
                <th style="text-align: center; border-right: 2px solid ; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.1</strong></span>
            </th>
                <th style="text-align: center; border-bottom: 2px solid ; ">
                <span class="bold"><strong>3.2</strong></span>
            </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td style="text-align: left; border-right: 2px solid ; ">glCompressedTexSubImage3D</td>
                <td style="text-align: center; border-right: 2px solid ; ">-</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; border-right: 2px solid ; ">✔</td>
                <td style="text-align: center; ">✔</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="refsect1" id="seealso">
        <h2>See Also</h2>
        <p>
            <a class="citerefentry" href="glActiveTexture.xhtml"><span class="citerefentry"><span class="refentrytitle">glActiveTexture</span></span></a>,
            <a class="citerefentry" href="glCompressedTexImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glCompressedTexImage2D</span></span></a>,
            <a class="citerefentry" href="glCompressedTexImage3D.xhtml"><span class="citerefentry"><span class="refentrytitle">glCompressedTexImage3D</span></span></a>,
            <a class="citerefentry" href="glCompressedTexSubImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glCompressedTexSubImage2D</span></span></a>,
            <a class="citerefentry" href="glCopyTexImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glCopyTexImage2D</span></span></a>,
            <a class="citerefentry" href="glCopyTexSubImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage2D</span></span></a>,
            <a class="citerefentry" href="glCopyTexSubImage3D.xhtml"><span class="citerefentry"><span class="refentrytitle">glCopyTexSubImage3D</span></span></a>,
            <a class="citerefentry" href="glPixelStorei.xhtml"><span class="citerefentry"><span class="refentrytitle">glPixelStorei</span></span></a>,
            <a class="citerefentry" href="glTexImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexImage2D</span></span></a>,
            <a class="citerefentry" href="glTexImage3D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexImage3D</span></span></a>,
            <a class="citerefentry" href="glTexSubImage2D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexSubImage2D</span></span></a>,
            <a class="citerefentry" href="glTexSubImage3D.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexSubImage3D</span></span></a>,
            <a class="citerefentry" href="glTexParameter.xhtml"><span class="citerefentry"><span class="refentrytitle">glTexParameter</span></span></a>
        </p>
      </div>
      <div class="refsect1" id="Copyright">
        <h2>Copyright</h2>
        <p>
            Copyright <span class="trademark"/>© 1991-2006 Silicon Graphics, Inc.
            Copyright <span class="trademark"/>© 2010-2015 Khronos Group.
            This document is licensed under the SGI Free Software B License.
            For details, see
            <a class="link" href="https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt" target="_top">https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt</a>.
        </p>
      </div>
    </div>
    <footer/>
  </body>
</html>
